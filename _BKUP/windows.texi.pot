# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-10-14 22:50+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: chapter
#: original_texis/windows.texi:6 original_texis/windows.texi:7
#, no-wrap
msgid "Windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:13
msgid ""
"This chapter describes the functions and variables related to Emacs "
"windows.  @xref{Frames}, for how windows are assigned an area of screen "
"available for Emacs to use.  @xref{Display}, for information on how text is "
"displayed in windows."
msgstr ""

#. type: node
#: original_texis/windows.texi:48 original_texis/windows.texi:51
#, no-wrap
msgid "Basic Windows"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Basic information on using windows."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:160 original_texis/windows.texi:161
#, no-wrap
msgid "Windows and Frames"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Relating windows to the frame they appear on."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:411 original_texis/windows.texi:412
#, no-wrap
msgid "Window Sizes"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Accessing a window's size."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:740 original_texis/windows.texi:741
#, no-wrap
msgid "Resizing Windows"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Changing the sizes of windows."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:997 original_texis/windows.texi:998
#, no-wrap
msgid "Preserving Window Sizes"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Preserving the size of windows."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:1089 original_texis/windows.texi:1090
#, no-wrap
msgid "Splitting Windows"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Creating a new window."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:1250 original_texis/windows.texi:1251
#, no-wrap
msgid "Deleting Windows"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Removing a window from its frame."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:1340 original_texis/windows.texi:1341
#, no-wrap
msgid "Recombining Windows"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Preserving the frame layout when splitting and deleting windows."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:1688 original_texis/windows.texi:1689
#, no-wrap
msgid "Selecting Windows"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "The selected window is the one that you edit in."
msgstr ""

#. type: node
#: original_texis/windows.texi:48 original_texis/windows.texi:1791
#, no-wrap
msgid "Cyclic Window Ordering"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Moving around the existing windows."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:1966 original_texis/windows.texi:1967
#, no-wrap
msgid "Buffers and Windows"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Each window displays the contents of a buffer."
msgstr ""

#. type: node
#: original_texis/windows.texi:48 original_texis/windows.texi:2083
#, no-wrap
msgid "Switching Buffers"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Higher-level functions for switching to a buffer."
msgstr ""

#. type: node
#: original_texis/windows.texi:48 original_texis/windows.texi:2244
#, no-wrap
msgid "Choosing Window"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "How to choose a window for displaying a buffer."
msgstr ""

#. type: node
#: original_texis/windows.texi:48 original_texis/windows.texi:2354
#, no-wrap
msgid "Display Action Functions"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Subroutines for @code{display-buffer}."
msgstr ""

#. type: node
#: original_texis/windows.texi:48 original_texis/windows.texi:2614
#, no-wrap
msgid "Choosing Window Options"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Extra options affecting how buffers are displayed."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:2754 original_texis/windows.texi:2755
#, no-wrap
msgid "Window History"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Each window remembers the buffers displayed in it."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:2865 original_texis/windows.texi:2866
#, no-wrap
msgid "Dedicated Windows"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "How to avoid displaying another buffer in a specific window."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:2922 original_texis/windows.texi:2923
#, no-wrap
msgid "Quitting Windows"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "How to restore the state prior to displaying a buffer."
msgstr ""

#. type: node
#: original_texis/windows.texi:48 original_texis/windows.texi:3034
#, no-wrap
msgid "Window Point"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Each window has its own location of point."
msgstr ""

#. type: node
#: original_texis/windows.texi:48 original_texis/windows.texi:3095
#, no-wrap
msgid "Window Start and End"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Buffer positions indicating which text is on-screen in a window."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:3339 original_texis/windows.texi:3340
#, no-wrap
msgid "Textual Scrolling"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Moving text up and down through the window."
msgstr ""

#. type: node
#: original_texis/windows.texi:48 original_texis/windows.texi:3593
#, no-wrap
msgid "Vertical Scrolling"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Moving the contents up and down on the window."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:3663 original_texis/windows.texi:3664
#, no-wrap
msgid "Horizontal Scrolling"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Moving the contents sideways on the window."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:3811 original_texis/windows.texi:3812
#, no-wrap
msgid "Coordinates and Windows"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Converting coordinates to windows."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:4062 original_texis/windows.texi:4063
#, no-wrap
msgid "Window Configurations"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Saving and restoring the state of the screen."
msgstr ""

#. type: section
#: original_texis/windows.texi:48 original_texis/windows.texi:4209 original_texis/windows.texi:4210
#, no-wrap
msgid "Window Parameters"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid "Associating additional information with windows."
msgstr ""

#. type: node
#: original_texis/windows.texi:48 original_texis/windows.texi:4379
#, no-wrap
msgid "Window Hooks"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:48
msgid ""
"Hooks for scrolling, window size changes, redisplay going past a certain "
"point, or window configuration changes."
msgstr ""

#. type: section
#: original_texis/windows.texi:52
#, no-wrap
msgid "Basic Concepts of Emacs Windows"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:53
#, no-wrap
msgid "window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:58
msgid ""
"A @dfn{window} is an area of the screen that is used to display a buffer "
"(@pxref{Buffers}).  In Emacs Lisp, windows are represented by a special Lisp "
"object type."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:59
#, no-wrap
msgid "multiple windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:66
msgid ""
"Windows are grouped into frames (@pxref{Frames}).  Each frame contains at "
"least one window; the user can subdivide it into multiple, non-overlapping "
"windows to view several buffers at once.  Lisp programs can use multiple "
"windows for a variety of purposes.  In Rmail, for example, you can view a "
"summary of message titles in one window, and the contents of the selected "
"message in another window."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:67
#, no-wrap
msgid "terminal screen"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:68
#, no-wrap
msgid "screen of terminal"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:75
msgid ""
"Emacs uses the word ``window'' with a different meaning than in graphical "
"desktop environments and window systems, such as the X Window System.  When "
"Emacs is run on X, each of its graphical X windows is an Emacs frame "
"(containing one or more Emacs windows).  When Emacs is run on a text "
"terminal, the frame fills the entire terminal screen."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:76
#, no-wrap
msgid "tiled windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:81
msgid ""
"Unlike X windows, Emacs windows are @dfn{tiled}; they never overlap within "
"the area of the frame.  When a window is created, resized, or deleted, the "
"change in window space is taken from or given to the adjacent windows, so "
"that the total area of the frame is unchanged."
msgstr ""

#. type: defun
#: original_texis/windows.texi:82
#, no-wrap
msgid "windowp object"
msgstr ""

#. type: defun
#: original_texis/windows.texi:85
msgid ""
"This function returns @code{t} if @var{object} is a window (whether or not "
"it displays a buffer).  Otherwise, it returns @code{nil}."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:87
#, no-wrap
msgid "live windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:90
msgid "A @dfn{live window} is one that is actually displaying a buffer in a frame."
msgstr ""

#. type: defun
#: original_texis/windows.texi:91
#, no-wrap
msgid "window-live-p object"
msgstr ""

#. type: defun
#: original_texis/windows.texi:94
msgid ""
"This function returns @code{t} if @var{object} is a live window and "
"@code{nil} otherwise.  A live window is one that displays a buffer."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:96
#, no-wrap
msgid "internal windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:101
msgid ""
"The windows in each frame are organized into a @dfn{window tree}.  "
"@xref{Windows and Frames}.  The leaf nodes of each window tree are live "
"windows---the ones actually displaying buffers.  The internal nodes of the "
"window tree are @dfn{internal windows}, which are not live."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:102
#, no-wrap
msgid "valid windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:109
msgid ""
"A @dfn{valid window} is one that is either live or internal.  A valid window "
"can be @dfn{deleted}, i.e., removed from its frame (@pxref{Deleting "
"Windows}); then it is no longer valid, but the Lisp object representing it "
"might be still referenced from other Lisp objects.  A deleted window may be "
"made valid again by restoring a saved window configuration (@pxref{Window "
"Configurations})."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:112
msgid ""
"You can distinguish valid windows from deleted windows with "
"@code{window-valid-p}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:113
#, no-wrap
msgid "window-valid-p object"
msgstr ""

#. type: defun
#: original_texis/windows.texi:117
msgid ""
"This function returns @code{t} if @var{object} is a live window, or an "
"internal window in a window tree.  Otherwise, it returns @code{nil}, "
"including for the case where @var{object} is a deleted window."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:119
#, no-wrap
msgid "selected window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:120
#, no-wrap
msgid "window selected within a frame"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:130
msgid ""
"In each frame, at any time, exactly one Emacs window is designated as "
"@dfn{selected within the frame}.  For the selected frame, that window is "
"called the @dfn{selected window}---the one in which most editing takes "
"place, and in which the cursor for selected windows appears (@pxref{Cursor "
"Parameters}).  The selected window's buffer is usually also the current "
"buffer, except when @code{set-buffer} has been used (@pxref{Current "
"Buffer}).  As for non-selected frames, the window selected within the frame "
"becomes the selected window if the frame is ever selected.  @xref{Selecting "
"Windows}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:131
#, no-wrap
msgid "selected-window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:134
msgid "This function returns the selected window (which is always a live window)."
msgstr ""

#. type: anchor{#1}
#: original_texis/windows.texi:144
msgid "Window Group"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:144
msgid ""
"Sometimes several windows collectively and cooperatively display a buffer, "
"for example, under the management of Follow Mode (@pxref{Follow Mode,,, "
"emacs}), where the windows together display a bigger portion of the buffer "
"than one window could alone.  It is often useful to consider such a "
"@dfn{window group} as a single entity.  Several functions such as "
"@code{window-group-start} (@pxref{Window Start and End}) allow you to do "
"this by supplying, as an argument, one of the windows as a stand in for the "
"whole group."
msgstr ""

#. type: defun
#: original_texis/windows.texi:145
#, no-wrap
msgid "selected-window-group"
msgstr ""

#. type: vindex
#: original_texis/windows.texi:146
#, no-wrap
msgid "selected-window-group-function"
msgstr ""

#. type: defun
#: original_texis/windows.texi:152
msgid ""
"When the selected window is a member of a group of windows, this function "
"returns a list of the windows in the group, ordered such that the first "
"window in the list is displaying the earliest part of the buffer, and so "
"on.  Otherwise the function returns a list containing just the selected "
"window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:158
msgid ""
"The selected window is considered part of a group when the buffer local "
"variable @code{selected-window-group-function} is set to a function.  In "
"this case, @code{selected-window-group} calls it with no arguments and "
"returns its result (which should be the list of windows in the group)."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:164
msgid "Each window belongs to exactly one frame (@pxref{Frames})."
msgstr ""

#. type: defun
#: original_texis/windows.texi:165
#, no-wrap
msgid "window-frame &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:169
msgid ""
"This function returns the frame that the window @var{window} belongs to.  If "
"@var{window} is @code{nil}, it defaults to the selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:171
#, no-wrap
msgid "window-list &optional frame minibuffer window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:175
msgid ""
"This function returns a list of live windows belonging to the frame "
"@var{frame}.  If @var{frame} is omitted or @code{nil}, it defaults to the "
"selected frame."
msgstr ""

#. type: defun
#: original_texis/windows.texi:182
msgid ""
"The optional argument @var{minibuffer} specifies whether to include the "
"minibuffer window in the returned list.  If @var{minibuffer} is @code{t}, "
"the minibuffer window is included.  If @var{minibuffer} is @code{nil} or "
"omitted, the minibuffer window is included only if it is active.  If "
"@var{minibuffer} is neither @code{nil} nor @code{t}, the minibuffer window "
"is never included."
msgstr ""

#. type: defun
#: original_texis/windows.texi:187
msgid ""
"The optional argument @var{window}, if non-@code{nil}, should be a live "
"window on the specified frame; then @var{window} will be the first element "
"in the returned list.  If @var{window} is omitted or @code{nil}, the window "
"selected within the frame is the first element."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:189
#, no-wrap
msgid "window tree"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:190
#, no-wrap
msgid "root window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:197
msgid ""
"Windows in the same frame are organized into a @dfn{window tree}, whose leaf "
"nodes are the live windows.  The internal nodes of a window tree are not "
"live; they exist for the purpose of organizing the relationships between "
"live windows.  The root node of a window tree is called the @dfn{root "
"window}.  It can be either a live window (if the frame has just one window), "
"or an internal window."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:204
msgid ""
"A minibuffer window (@pxref{Minibuffer Windows}) is not part of its frame's "
"window tree unless the frame is a minibuffer-only frame.  Nonetheless, most "
"of the functions in this section accept the minibuffer window as an "
"argument.  Also, the function @code{window-tree} described at the end of "
"this section lists the minibuffer window alongside the actual window tree."
msgstr ""

#. type: defun
#: original_texis/windows.texi:205
#, no-wrap
msgid "frame-root-window &optional frame-or-window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:211
msgid ""
"This function returns the root window for @var{frame-or-window}.  The "
"argument @var{frame-or-window} should be either a window or a frame; if "
"omitted or @code{nil}, it defaults to the selected frame.  If "
"@var{frame-or-window} is a window, the return value is the root window of "
"that window's frame."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:213 original_texis/windows.texi:226
#, no-wrap
msgid "parent window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:214
#, no-wrap
msgid "child window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:215
#, no-wrap
msgid "sibling window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:225
msgid ""
"When a window is split, there are two live windows where previously there "
"was one.  One of these is represented by the same Lisp window object as the "
"original window, and the other is represented by a newly-created Lisp window "
"object.  Both of these live windows become leaf nodes of the window tree, as "
"@dfn{child windows} of a single internal window.  If necessary, Emacs "
"automatically creates this internal window, which is also called the "
"@dfn{parent window}, and assigns it to the appropriate position in the "
"window tree.  A set of windows that share the same parent are called "
"@dfn{siblings}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:227
#, no-wrap
msgid "window-parent &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:232
msgid ""
"This function returns the parent window of @var{window}.  If @var{window} is "
"omitted or @code{nil}, it defaults to the selected window.  The return value "
"is @code{nil} if @var{window} has no parent (i.e., it is a minibuffer window "
"or the root window of its frame)."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:238
msgid ""
"Each internal window always has at least two child windows.  If this number "
"falls to one as a result of window deletion, Emacs automatically deletes the "
"internal window, and its sole remaining child window takes its place in the "
"window tree."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:244
msgid ""
"Each child window can be either a live window, or an internal window (which "
"in turn would have its own child windows).  Therefore, each internal window "
"can be thought of as occupying a certain rectangular @dfn{screen area}---the "
"union of the areas occupied by the live windows that are ultimately "
"descended from it."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:245
#, no-wrap
msgid "window combination"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:246
#, no-wrap
msgid "vertical combination"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:247
#, no-wrap
msgid "horizontal combination"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:254
msgid ""
"For each internal window, the screen areas of the immediate children are "
"arranged either vertically or horizontally (never both).  If the child "
"windows are arranged one above the other, they are said to form a "
"@dfn{vertical combination}; if they are arranged side by side, they are said "
"to form a @dfn{horizontal combination}.  Consider the following example:"
msgstr ""

#. type: group
#: original_texis/windows.texi:270
#, no-wrap
msgid ""
"     ______________________________________\n"
"    | ______  ____________________________ |\n"
"    ||      || __________________________ ||\n"
"    ||      |||                          |||\n"
"    ||      |||                          |||\n"
"    ||      |||                          |||\n"
"    ||      |||____________W4____________|||\n"
"    ||      || __________________________ ||\n"
"    ||      |||                          |||\n"
"    ||      |||                          |||\n"
"    ||      |||____________W5____________|||\n"
"    ||__W2__||_____________W3_____________ |\n"
"    |__________________W1__________________|\n"
"\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:281
msgid ""
"The root window of this frame is an internal window, @var{W1}.  Its child "
"windows form a horizontal combination, consisting of the live window "
"@var{W2} and the internal window @var{W3}.  The child windows of @var{W3} "
"form a vertical combination, consisting of the live windows @var{W4} and "
"@var{W5}.  Hence, the live windows in this window tree are @var{W2}, "
"@var{W4}, and @var{W5}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:284
msgid ""
"The following functions can be used to retrieve a child window of an "
"internal window, and the siblings of a child window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:285
#, no-wrap
msgid "window-top-child &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:290
msgid ""
"This function returns the topmost child window of @var{window}, if "
"@var{window} is an internal window whose children form a vertical "
"combination.  For any other type of window, the return value is @code{nil}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:292
#, no-wrap
msgid "window-left-child &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:297
msgid ""
"This function returns the leftmost child window of @var{window}, if "
"@var{window} is an internal window whose children form a horizontal "
"combination.  For any other type of window, the return value is @code{nil}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:299
#, no-wrap
msgid "window-child window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:304
msgid ""
"This function returns the first child window of the internal window "
"@var{window}---the topmost child window for a vertical combination, or the "
"leftmost child window for a horizontal combination.  If @var{window} is a "
"live window, the return value is @code{nil}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:306
#, no-wrap
msgid "window-combined-p &optional window horizontal"
msgstr ""

#. type: defun
#: original_texis/windows.texi:310
msgid ""
"This function returns a non-@code{nil} value if and only if @var{window} is "
"part of a vertical combination.  If @var{window} is omitted or @code{nil}, "
"it defaults to the selected one."
msgstr ""

#. type: defun
#: original_texis/windows.texi:314
msgid ""
"If the optional argument @var{horizontal} is non-@code{nil}, this means to "
"return non-@code{nil} if and only if @var{window} is part of a horizontal "
"combination."
msgstr ""

#. type: defun
#: original_texis/windows.texi:316
#, no-wrap
msgid "window-next-sibling &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:321
msgid ""
"This function returns the next sibling of the window @var{window}.  If "
"omitted or @code{nil}, @var{window} defaults to the selected window.  The "
"return value is @code{nil} if @var{window} is the last child of its parent."
msgstr ""

#. type: defun
#: original_texis/windows.texi:323
#, no-wrap
msgid "window-prev-sibling &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:328
msgid ""
"This function returns the previous sibling of the window @var{window}.  If "
"omitted or @code{nil}, @var{window} defaults to the selected window.  The "
"return value is @code{nil} if @var{window} is the first child of its parent."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:335
msgid ""
"The functions @code{window-next-sibling} and @code{window-prev-sibling} "
"should not be confused with the functions @code{next-window} and "
"@code{previous-window}, which return the next and previous window, "
"respectively, in the cyclic ordering of windows (@pxref{Cyclic Window "
"Ordering})."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:338
msgid ""
"You can use the following functions to find the first live window on a frame "
"and the window nearest to a given window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:339
#, no-wrap
msgid "frame-first-window &optional frame-or-window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:347
msgid ""
"This function returns the live window at the upper left corner of the frame "
"specified by @var{frame-or-window}.  The argument @var{frame-or-window} must "
"denote a window or a live frame and defaults to the selected frame.  If "
"@var{frame-or-window} specifies a window, this function returns the first "
"window on that window's frame.  Under the assumption that the frame from our "
"canonical example is selected @code{(frame-first-window)} returns @var{W2}."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:349
#, no-wrap
msgid "window in direction"
msgstr ""

#. type: defun
#: original_texis/windows.texi:350
#, no-wrap
msgid "window-in-direction direction &optional window ignore sign wrap mini"
msgstr ""

#. type: defun
#: original_texis/windows.texi:357
msgid ""
"This function returns the nearest live window in direction @var{direction} "
"as seen from the position of @code{window-point} in window @var{window}.  "
"The argument @var{direction} must be one of @code{above}, @code{below}, "
"@code{left} or @code{right}.  The optional argument @var{window} must denote "
"a live window and defaults to the selected one."
msgstr ""

#. type: defun
#: original_texis/windows.texi:365
msgid ""
"This function does not return a window whose @code{no-other-window} "
"parameter is non-@code{nil} (@pxref{Window Parameters}).  If the nearest "
"window's @code{no-other-window} parameter is non-@code{nil}, this function "
"tries to find another window in the indicated direction whose "
"@code{no-other-window} parameter is @code{nil}.  If the optional argument "
"@var{ignore} is non-@code{nil}, a window may be returned even if its "
"@code{no-other-window} parameter is non-@code{nil}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:370
msgid ""
"If the optional argument @var{sign} is a negative number, it means to use "
"the right or bottom edge of @var{window} as reference position instead of "
"@code{window-point}.  If @var{sign} is a positive number, it means to use "
"the left or top edge of @var{window} as reference position."
msgstr ""

#. type: defun
#: original_texis/windows.texi:376
msgid ""
"If the optional argument @var{wrap} is non-@code{nil}, this means to wrap "
"@var{direction} around frame borders.  For example, if @var{window} is at "
"the top of the frame and @var{direction} is @code{above}, then this function "
"usually returns the frame's minibuffer window if it's active and a window at "
"the bottom of the frame otherwise."
msgstr ""

#. type: defun
#: original_texis/windows.texi:382
msgid ""
"If the optional argument @var{mini} is @code{nil}, this means to return the "
"minibuffer window if and only if it is currently active.  If @var{mini} is "
"non-@code{nil}, this function may return the minibuffer window even when "
"it's not active.  However, if @var{wrap} is non-@code{nil}, it always acts "
"as if @var{mini} were @code{nil}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:384
msgid "If it doesn't find a suitable window, this function returns @code{nil}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:388
msgid ""
"The following function allows the entire window tree of a frame to be "
"retrieved:"
msgstr ""

#. type: defun
#: original_texis/windows.texi:389
#, no-wrap
msgid "window-tree &optional frame"
msgstr ""

#. type: defun
#: original_texis/windows.texi:393
msgid ""
"This function returns a list representing the window tree for frame "
"@var{frame}.  If @var{frame} is omitted or @code{nil}, it defaults to the "
"selected frame."
msgstr ""

#. type: defun
#: original_texis/windows.texi:397
msgid ""
"The return value is a list of the form @code{(@var{root} @var{mini})}, where "
"@var{root} represents the window tree of the frame's root window, and "
"@var{mini} is the frame's minibuffer window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:408
msgid ""
"If the root window is live, @var{root} is that window itself.  Otherwise, "
"@var{root} is a list @code{(@var{dir} @var{edges} @var{w1} @var{w2} ...)} "
"where @var{dir} is @code{nil} for a horizontal combination and @code{t} for "
"a vertical combination, @var{edges} gives the size and position of the "
"combination, and the remaining elements are the child windows.  Each child "
"window may again be a window object (for a live window) or a list with the "
"same format as above (for an internal window).  The @var{edges} element is a "
"list @code{(@var{left} @var{top} @var{right} @var{bottom})}, similar to the "
"value returned by @code{window-edges} (@pxref{Coordinates and Windows})."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:413
#, no-wrap
msgid "window size"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:414
#, no-wrap
msgid "size of window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:417
msgid "The following schematic shows the structure of a live window:"
msgstr ""

#. type: group
#: original_texis/windows.texi:433
#, no-wrap
msgid ""
"        ____________________________________________\n"
"       |______________ Header Line ______________|RD| ^\n"
"     ^ |LS|LM|LF|                       |RF|RM|RS|  | |\n"
"     | |  |  |  |                       |  |  |  |  | |\n"
"Window |  |  |  |       Text Area       |  |  |  |  | Window\n"
"Body | |  |  |  |     (Window Body)     |  |  |  |  | Total\n"
"Height |  |  |  |                       |  |  |  |  | Height\n"
"     | |  |  |  |<- Window Body Width ->|  |  |  |  | |\n"
"     v |__|__|__|_______________________|__|__|__|  | |\n"
"       |_________ Horizontal Scroll Bar _________|  | |\n"
"       |_______________ Mode Line _______________|__| |\n"
"       |_____________ Bottom Divider _______________| v\n"
"        <---------- Window Total Width ------------>\n"
"\n"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:437
#, no-wrap
msgid "window body"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:438
#, no-wrap
msgid "text area of a window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:439
#, no-wrap
msgid "body of a window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:452
msgid ""
"At the center of the window is the @dfn{text area}, or @dfn{body}, where the "
"buffer text is displayed.  The text area can be surrounded by a series of "
"optional areas.  On the left and right, from innermost to outermost, these "
"are the left and right fringes, denoted by LF and RF (@pxref{Fringes}); the "
"left and right margins, denoted by LM and RM in the schematic "
"(@pxref{Display Margins}); the left or right vertical scroll bar, only one "
"of which is present at any time, denoted by LS and RS (@pxref{Scroll Bars}); "
"and the right divider, denoted by RD (@pxref{Window Dividers}).  At the top "
"of the window is the header line (@pxref{Header Lines}).  At the bottom of "
"the window are the horizontal scroll bar (@pxref{Scroll Bars}); the mode "
"line (@pxref{Mode Line Format}); and the bottom divider (@pxref{Window "
"Dividers})."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:463
msgid ""
"Emacs provides miscellaneous functions for finding the height and width of a "
"window.  The return value of many of these functions can be specified either "
"in units of pixels or in units of lines and columns.  On a graphical "
"display, the latter actually correspond to the height and width of a default "
"character specified by the frame's default font as returned by "
"@code{frame-char-height} and @code{frame-char-width} (@pxref{Frame Font}).  "
"Thus, if a window is displaying text with a different font or size, the "
"reported line height and column width for that window may differ from the "
"actual number of text lines or columns displayed within it."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:464
#, no-wrap
msgid "window height"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:465
#, no-wrap
msgid "height of a window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:466
#, no-wrap
msgid "total height of a window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:470
msgid ""
"The @dfn{total height} of a window is the number of lines comprising the "
"window's body, the header line, the horizontal scroll bar, the mode line and "
"the bottom divider (if any)."
msgstr ""

#. type: defun
#: original_texis/windows.texi:471
#, no-wrap
msgid "window-total-height &optional window round"
msgstr ""

#. type: defun
#: original_texis/windows.texi:476
msgid ""
"This function returns the total height, in lines, of the window "
"@var{window}.  If @var{window} is omitted or @code{nil}, it defaults to the "
"selected window.  If @var{window} is an internal window, the return value is "
"the total height occupied by its descendant windows."
msgstr ""

#. type: defun
#: original_texis/windows.texi:487
msgid ""
"If a window's pixel height is not an integral multiple of its frame's "
"default character height, the number of lines occupied by the window is "
"rounded internally.  This is done in a way such that, if the window is a "
"parent window, the sum of the total heights of all its child windows "
"internally equals the total height of their parent.  This means that "
"although two windows have the same pixel height, their internal total "
"heights may differ by one line.  This means also, that if window is "
"vertically combined and has a next sibling, the topmost row of that sibling "
"can be calculated as the sum of this window's topmost row and total height "
"(@pxref{Coordinates and Windows})"
msgstr ""

#. type: defun
#: original_texis/windows.texi:494
msgid ""
"If the optional argument @var{round} is @code{ceiling}, this function "
"returns the smallest integer larger than @var{window}'s pixel height divided "
"by the character height of its frame; if it is @code{floor}, it returns the "
"largest integer smaller than said value; with any other @var{round} it "
"returns the internal value of @var{windows}'s total height."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:496
#, no-wrap
msgid "window width"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:497
#, no-wrap
msgid "width of a window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:498
#, no-wrap
msgid "total width of a window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:502
msgid ""
"The @dfn{total width} of a window is the number of lines comprising the "
"window's body, its margins, fringes, scroll bars and a right divider (if "
"any)."
msgstr ""

#. type: defun
#: original_texis/windows.texi:503
#, no-wrap
msgid "window-total-width &optional window round"
msgstr ""

#. type: defun
#: original_texis/windows.texi:508
msgid ""
"This function returns the total width, in columns, of the window "
"@var{window}.  If @var{window} is omitted or @code{nil}, it defaults to the "
"selected window.  If @var{window} is internal, the return value is the total "
"width occupied by its descendant windows."
msgstr ""

#. type: defun
#: original_texis/windows.texi:520
msgid ""
"If a window's pixel width is not an integral multiple of its frame's "
"character width, the number of lines occupied by the window is rounded "
"internally.  This is done in a way such that, if the window is a parent "
"window, the sum of the total widths of all its children internally equals "
"the total width of their parent.  This means that although two windows have "
"the same pixel width, their internal total widths may differ by one column.  "
"This means also, that if this window is horizontally combined and has a next "
"sibling, the leftmost column of that sibling can be calculated as the sum of "
"this window's leftmost column and total width (@pxref{Coordinates and "
"Windows}).  The optional argument @var{round} behaves as it does for "
"@code{window-total-height}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:522
#, no-wrap
msgid "window-total-size &optional window horizontal round"
msgstr ""

#. type: defun
#: original_texis/windows.texi:529
msgid ""
"This function returns either the total height in lines or the total width in "
"columns of the window @var{window}.  If @var{horizontal} is omitted or "
"@code{nil}, this is equivalent to calling @code{window-total-height} for "
"@var{window}; otherwise it is equivalent to calling "
"@code{window-total-width} for @var{window}.  The optional argument "
"@var{round} behaves as it does for @code{window-total-height}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:533
msgid ""
"The following two functions can be used to return the total size of a window "
"in units of pixels."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:534
#, no-wrap
msgid "window pixel height"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:535
#, no-wrap
msgid "pixel height of a window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:536
#, no-wrap
msgid "total pixel height of a window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:538
#, no-wrap
msgid "window-pixel-height &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:541
msgid ""
"This function returns the total height of window @var{window} in pixels.  "
"@var{window} must be a valid window and defaults to the selected one."
msgstr ""

#. type: defun
#: original_texis/windows.texi:546
msgid ""
"The return value includes mode and header line, a horizontal scroll bar and "
"a bottom divider, if any.  If @var{window} is an internal window, its pixel "
"height is the pixel height of the screen areas spanned by its children."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:548
#, no-wrap
msgid "window pixel width"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:549
#, no-wrap
msgid "pixel width of a window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:550
#, no-wrap
msgid "total pixel width of a window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:552
#, no-wrap
msgid "window-pixel-width &optional Lisp_Object &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:555
msgid ""
"This function returns the width of window @var{window} in pixels.  "
"@var{window} must be a valid window and defaults to the selected one."
msgstr ""

#. type: defun
#: original_texis/windows.texi:560
msgid ""
"The return value includes the fringes and margins of @var{window} as well as "
"any vertical dividers or scroll bars belonging to @var{window}.  If "
"@var{window} is an internal window, its pixel width is the width of the "
"screen areas spanned by its children."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:562
#, no-wrap
msgid "full-width window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:563
#, no-wrap
msgid "full-height window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:566
msgid ""
"The following functions can be used to determine whether a given window has "
"any adjacent windows."
msgstr ""

#. type: defun
#: original_texis/windows.texi:567
#, no-wrap
msgid "window-full-height-p &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:574
msgid ""
"This function returns non-@code{nil} if @var{window} has no other window "
"above or below it in its frame.  More precisely, this means that the total "
"height of @var{window} equals the total height of the root window on that "
"frame.  The minibuffer window does not count in this regard.  If "
"@var{window} is omitted or @code{nil}, it defaults to the selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:576
#, no-wrap
msgid "window-full-width-p &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:581
msgid ""
"This function returns non-@code{nil} if @var{window} has no other window to "
"the left or right in its frame, i.e., its total width equals that of the "
"root window on that frame.  If @var{window} is omitted or @code{nil}, it "
"defaults to the selected window."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:583
#, no-wrap
msgid "window body height"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:584
#, no-wrap
msgid "body height of a window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:588
msgid ""
"The @dfn{body height} of a window is the height of its text area, which does "
"not include a mode or header line, a horizontal scroll bar, or a bottom "
"divider."
msgstr ""

#. type: defun
#: original_texis/windows.texi:589
#, no-wrap
msgid "window-body-height &optional window pixelwise"
msgstr ""

#. type: defun
#: original_texis/windows.texi:593
msgid ""
"This function returns the height, in lines, of the body of window "
"@var{window}.  If @var{window} is omitted or @code{nil}, it defaults to the "
"selected window; otherwise it must be a live window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:596
msgid ""
"If the optional argument @var{pixelwise} is non-@code{nil}, this function "
"returns the body height of @var{window} counted in pixels."
msgstr ""

#. type: defun
#: original_texis/windows.texi:602
msgid ""
"If @var{pixelwise} is @code{nil}, the return value is rounded down to the "
"nearest integer, if necessary.  This means that if a line at the bottom of "
"the text area is only partially visible, that line is not counted.  It also "
"means that the height of a window's body can never exceed its total height "
"as returned by @code{window-total-height}."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:604
#, no-wrap
msgid "window body width"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:605
#, no-wrap
msgid "body width of a window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:614
msgid ""
"The @dfn{body width} of a window is the width of its text area, which does "
"not include the scroll bar, fringes, margins or a right divider.  Note that "
"when one or both fringes are removed (by setting their width to zero), the "
"display engine reserves two character cells, one on each side of the window, "
"for displaying the continuation and truncation glyphs, which leaves 2 "
"columns less for text display.  (The function "
"@code{window-max-chars-per-line}, described below, takes this peculiarity "
"into account.)"
msgstr ""

#. type: defun
#: original_texis/windows.texi:615
#, no-wrap
msgid "window-body-width &optional window pixelwise"
msgstr ""

#. type: defun
#: original_texis/windows.texi:619
msgid ""
"This function returns the width, in columns, of the body of window "
"@var{window}.  If @var{window} is omitted or @code{nil}, it defaults to the "
"selected window; otherwise it must be a live window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:622
msgid ""
"If the optional argument @var{pixelwise} is non-@code{nil}, this function "
"returns the body width of @var{window} in units of pixels."
msgstr ""

#. type: defun
#: original_texis/windows.texi:628
msgid ""
"If @var{pixelwise} is @code{nil}, the return value is rounded down to the "
"nearest integer, if necessary.  This means that if a column on the right of "
"the text area is only partially visible, that column is not counted.  It "
"also means that the width of a window's body can never exceed its total "
"width as returned by @code{window-total-width}."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:630
#, no-wrap
msgid "window body size"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:631
#, no-wrap
msgid "body size of a window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:632
#, no-wrap
msgid "window-body-size &optional window horizontal pixelwise"
msgstr ""

#. type: defun
#: original_texis/windows.texi:638
msgid ""
"This function returns the body height or body width of @var{window}.  If "
"@var{horizontal} is omitted or @code{nil}, it is equivalent to calling "
"@code{window-body-height} for @var{window}; otherwise it is equivalent to "
"calling @code{window-body-width}.  In either case, the optional argument "
"@var{pixelwise} is passed to the function called."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:644
msgid ""
"For compatibility with previous versions of Emacs, @code{window-height} is "
"an alias for @code{window-total-height}, and @code{window-width} is an alias "
"for @code{window-body-width}.  These aliases are considered obsolete and "
"will be removed in the future."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:650
msgid ""
"The pixel heights of a window's mode and header line can be retrieved with "
"the functions given below.  Their return value is usually accurate unless "
"the window has not been displayed before: In that case, the return value is "
"based on an estimate of the font used for the window's frame."
msgstr ""

#. type: defun
#: original_texis/windows.texi:651
#, no-wrap
msgid "window-mode-line-height &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:655
msgid ""
"This function returns the height in pixels of @var{window}'s mode line.  "
"@var{window} must be a live window and defaults to the selected one.  If "
"@var{window} has no mode line, the return value is zero."
msgstr ""

#. type: defun
#: original_texis/windows.texi:657
#, no-wrap
msgid "window-header-line-height &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:661
msgid ""
"This function returns the height in pixels of @var{window}'s header line.  "
"@var{window} must be a live window and defaults to the selected one.  If "
"@var{window} has no header line, the return value is zero."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:667
msgid ""
"Functions for retrieving the height and/or width of window dividers "
"(@pxref{Window Dividers}), fringes (@pxref{Fringes}), scroll bars "
"(@pxref{Scroll Bars}), and display margins (@pxref{Display Margins}) are "
"described in the corresponding sections."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:670
msgid ""
"If your Lisp program needs to make layout decisions, you will find the "
"following function useful:"
msgstr ""

#. type: defun
#: original_texis/windows.texi:671
#, no-wrap
msgid "window-max-chars-per-line &optional window face"
msgstr ""

#. type: defun
#: original_texis/windows.texi:678
msgid ""
"This function returns the number of characters displayed in the specified "
"face @var{face} in the specified window @var{window} (which must be a live "
"window).  If @var{face} was remapped (@pxref{Face Remapping}), the "
"information is returned for the remapped face.  If omitted or @code{nil}, "
"@var{face} defaults to the default face, and @var{window} defaults to the "
"selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:684
msgid ""
"Unlike @code{window-body-width}, this function accounts for the actual size "
"of @var{face}'s font, instead of working in units of the canonical character "
"width of @var{window}'s frame (@pxref{Frame Font}).  It also accounts for "
"space used by the continuation glyph, if @var{window} lacks one or both of "
"its fringes."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:686
#, no-wrap
msgid "fixed-size window"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:687 original_texis/windows.texi:696
#, no-wrap
msgid "window-min-height"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:688 original_texis/windows.texi:703
#, no-wrap
msgid "window-min-width"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:695
msgid ""
"Commands that change the size of windows (@pxref{Resizing Windows}), or "
"split them (@pxref{Splitting Windows}), obey the variables "
"@code{window-min-height} and @code{window-min-width}, which specify the "
"smallest allowable window height and width.  They also obey the variable "
"@code{window-size-fixed}, with which a window can be @dfn{fixed} in size "
"(@pxref{Preserving Window Sizes})."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:701
msgid ""
"This option specifies the minimum total height, in lines, of any window.  "
"Its value has to accommodate at least one text line as well as a mode and "
"header line, a horizontal scroll bar and a bottom divider, if present."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:707
msgid ""
"This option specifies the minimum total width, in columns, of any window.  "
"Its value has to accommodate two text columns as well as margins, fringes, a "
"scroll bar and a right divider, if present."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:713
msgid ""
"The following function tells how small a specific window can get taking into "
"account the sizes of its areas and the values of @code{window-min-height}, "
"@code{window-min-width} and @code{window-size-fixed} (@pxref{Preserving "
"Window Sizes})."
msgstr ""

#. type: defun
#: original_texis/windows.texi:714
#, no-wrap
msgid "window-min-size &optional window horizontal ignore pixelwise"
msgstr ""

#. type: defun
#: original_texis/windows.texi:720
msgid ""
"This function returns the minimum size of @var{window}.  @var{window} must "
"be a valid window and defaults to the selected one.  The optional argument "
"@var{horizontal} non-@code{nil} means to return the minimum number of "
"columns of @var{window}; otherwise return the minimum number of "
"@var{window}'s lines."
msgstr ""

#. type: defun
#: original_texis/windows.texi:727
msgid ""
"The return value makes sure that all components of @var{window} remain fully "
"visible if @var{window}'s size were actually set to it.  With "
"@var{horizontal} @code{nil} it includes the mode and header line, the "
"horizontal scroll bar and the bottom divider, if present.  With "
"@var{horizontal} non-@code{nil} it includes the margins and fringes, the "
"vertical scroll bar and the right divider, if present."
msgstr ""

#. type: defun
#: original_texis/windows.texi:735
msgid ""
"The optional argument @var{ignore}, if non-@code{nil}, means ignore "
"restrictions imposed by fixed size windows, @code{window-min-height} or "
"@code{window-min-width} settings.  If @var{ignore} equals @code{safe}, live "
"windows may get as small as @code{window-safe-min-height} lines and "
"@code{window-safe-min-width} columns.  If @var{ignore} is a window, ignore "
"restrictions for that window only.  Any other non-@code{nil} value means "
"ignore all of the above restrictions for all windows."
msgstr ""

#. type: defun
#: original_texis/windows.texi:738
msgid ""
"The optional argument @var{pixelwise} non-@code{nil} means to return the "
"minimum size of @var{window} counted in pixels."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:742
#, no-wrap
msgid "window resizing"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:743
#, no-wrap
msgid "resize window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:744
#, no-wrap
msgid "changing window size"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:745
#, no-wrap
msgid "window size, changing"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:753
msgid ""
"This section describes functions for resizing a window without changing the "
"size of its frame.  Because live windows do not overlap, these functions are "
"meaningful only on frames that contain two or more windows: resizing a "
"window also changes the size of a neighboring window.  If there is just one "
"window on a frame, its size cannot be changed except by resizing the frame "
"(@pxref{Size and Position})."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:757
msgid ""
"Except where noted, these functions also accept internal windows as "
"arguments.  Resizing an internal window causes its child windows to be "
"resized to fit the same space."
msgstr ""

#. type: defun
#: original_texis/windows.texi:758
#, no-wrap
msgid "window-resizable window delta &optional horizontal ignore pixelwise"
msgstr ""

#. type: defun
#: original_texis/windows.texi:764
msgid ""
"This function returns @var{delta} if the size of @var{window} can be changed "
"vertically by @var{delta} lines.  If the optional argument @var{horizontal} "
"is non-@code{nil}, it instead returns @var{delta} if @var{window} can be "
"resized horizontally by @var{delta} columns.  It does not actually change "
"the window size."
msgstr ""

#. type: defun
#: original_texis/windows.texi:766
msgid "If @var{window} is @code{nil}, it defaults to the selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:772
msgid ""
"A positive value of @var{delta} means to check whether the window can be "
"enlarged by that number of lines or columns; a negative value of @var{delta} "
"means to check whether the window can be shrunk by that many lines or "
"columns.  If @var{delta} is non-zero, a return value of 0 means that the "
"window cannot be resized."
msgstr ""

#. type: defun
#: original_texis/windows.texi:783
msgid ""
"Normally, the variables @code{window-min-height} and @code{window-min-width} "
"specify the smallest allowable window size (@pxref{Window Sizes}).  However, "
"if the optional argument @var{ignore} is non-@code{nil}, this function "
"ignores @code{window-min-height} and @code{window-min-width}, as well as "
"@code{window-size-fixed}.  Instead, it considers the minimum-height window "
"to be one consisting of a header and a mode line, a horizontal scrollbar and "
"a bottom divider (if any), plus a text area one line tall; and a "
"minimum-width window as one consisting of fringes, margins, a scroll bar and "
"a right divider (if any), plus a text area two columns wide."
msgstr ""

#. type: defun
#: original_texis/windows.texi:786 original_texis/windows.texi:824
msgid ""
"If the optional argument @var{pixelwise} is non-@code{nil}, @var{delta} is "
"interpreted as pixels."
msgstr ""

#. type: defun
#: original_texis/windows.texi:788
#, no-wrap
msgid "window-resize window delta &optional horizontal ignore pixelwise"
msgstr ""

#. type: defun
#: original_texis/windows.texi:794
msgid ""
"This function resizes @var{window} by @var{delta} increments.  If "
"@var{horizontal} is @code{nil}, it changes the height by @var{delta} lines; "
"otherwise, it changes the width by @var{delta} columns.  A positive "
"@var{delta} means to enlarge the window, and a negative @var{delta} means to "
"shrink it."
msgstr ""

#. type: defun
#: original_texis/windows.texi:797
msgid ""
"If @var{window} is @code{nil}, it defaults to the selected window.  If the "
"window cannot be resized as demanded, an error is signaled."
msgstr ""

#. type: defun
#: original_texis/windows.texi:800
msgid ""
"The optional argument @var{ignore} has the same meaning as for the function "
"@code{window-resizable} above."
msgstr ""

#. type: defun
#: original_texis/windows.texi:803
msgid ""
"If the optional argument @var{pixelwise} is non-@code{nil}, @var{delta} will "
"be interpreted as pixels."
msgstr ""

#. type: defun
#: original_texis/windows.texi:810
msgid ""
"The choice of which window edges this function alters depends on the values "
"of the option @code{window-combination-resize} and the combination limits of "
"the involved windows; in some cases, it may alter both edges.  "
"@xref{Recombining Windows}.  To resize by moving only the bottom or right "
"edge of a window, use the function @code{adjust-window-trailing-edge}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:816
#, no-wrap
msgid "adjust-window-trailing-edge window delta &optional horizontal pixelwise"
msgstr ""

#. type: defun
#: original_texis/windows.texi:821
msgid ""
"This function moves @var{window}'s bottom edge by @var{delta} lines.  If "
"optional argument @var{horizontal} is non-@code{nil}, it instead moves the "
"right edge by @var{delta} columns.  If @var{window} is @code{nil}, it "
"defaults to the selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:829
msgid ""
"A positive @var{delta} moves the edge downwards or to the right; a negative "
"@var{delta} moves it upwards or to the left.  If the edge cannot be moved as "
"far as specified by @var{delta}, this function moves it as far as possible "
"but does not signal a error."
msgstr ""

#. type: defun
#: original_texis/windows.texi:833
msgid ""
"This function tries to resize windows adjacent to the edge that is moved.  "
"If this is not possible for some reason (e.g., if that adjacent window is "
"fixed-size), it may resize other windows."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:835
#, no-wrap
msgid "pixelwise, resizing windows"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:836
#, no-wrap
msgid "window-resize-pixelwise"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:843
msgid ""
"If the value of this option is non-@code{nil}, Emacs resizes windows in "
"units of pixels.  This currently affects functions like @code{split-window} "
"(@pxref{Splitting Windows}), @code{maximize-window}, @code{minimize-window}, "
"@code{fit-window-to-buffer}, @code{fit-frame-to-buffer} and "
"@code{shrink-window-if-larger-than-buffer} (all listed below)."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:847
msgid ""
"Note that when a frame's pixel size is not a multiple of its character size, "
"at least one window may get resized pixelwise even if this option is "
"@code{nil}.  The default value is @code{nil}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:851
msgid ""
"The following commands resize windows in more specific ways.  When called "
"interactively, they act on the selected window."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:852
#, no-wrap
msgid ""
"Command fit-window-to-buffer &optional window max-height min-height "
"max-width min-width preserve-size"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:857
msgid ""
"This command adjusts the height or width of @var{window} to fit the text in "
"it.  It returns non-@code{nil} if it was able to resize @var{window}, and "
"@code{nil} otherwise.  If @var{window} is omitted or @code{nil}, it defaults "
"to the selected window.  Otherwise, it should be a live window."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:867
msgid ""
"If @var{window} is part of a vertical combination, this function adjusts "
"@var{window}'s height.  The new height is calculated from the actual height "
"of the accessible portion of its buffer.  The optional argument "
"@var{max-height}, if non-@code{nil}, specifies the maximum total height that "
"this function can give @var{window}.  The optional argument "
"@var{min-height}, if non-@code{nil}, specifies the minimum total height that "
"it can give, which overrides the variable @code{window-min-height}.  Both "
"@var{max-height} and @var{min-height} are specified in lines and include "
"mode and header line and a bottom divider, if any."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:879
msgid ""
"If @var{window} is part of a horizontal combination and the value of the "
"option @code{fit-window-to-buffer-horizontally} (see below) is "
"non-@code{nil}, this function adjusts @var{window}'s height.  The new width "
"of @var{window} is calculated from the maximum length of its buffer's lines "
"that follow the current start position of @var{window}.  The optional "
"argument @var{max-width} specifies a maximum width and defaults to the width "
"of @var{window}'s frame.  The optional argument @var{min-width} specifies a "
"minimum width and defaults to @code{window-min-width}.  Both @var{max-width} "
"and @var{min-width} are specified in columns and include fringes, margins "
"and scrollbars, if any."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:883
msgid ""
"The optional argument @var{preserve-size}, if non-@code{nil}, will install a "
"parameter to preserve the size of @var{window} during future resize "
"operations (@pxref{Preserving Window Sizes})."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:887
msgid ""
"If the option @code{fit-frame-to-buffer} (see below) is non-@code{nil}, this "
"function will try to resize the frame of @var{window} to fit its contents by "
"calling @code{fit-frame-to-buffer} (see below)."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:889
#, no-wrap
msgid "fit-window-to-buffer-horizontally"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:896
msgid ""
"If this is non-@code{nil}, @code{fit-window-to-buffer} can resize windows "
"horizontally.  If this is @code{nil} (the default)  "
"@code{fit-window-to-buffer} never resizes windows horizontally.  If this is "
"@code{only}, it can resize windows horizontally only.  Any other value means "
"@code{fit-window-to-buffer} can resize windows in both dimensions."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:898
#, no-wrap
msgid "fit-frame-to-buffer"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:905
msgid ""
"If this option is non-@code{nil}, @code{fit-window-to-buffer} can fit a "
"frame to its buffer.  A frame is fit if and only if its root window is a "
"live window and this option is non-@code{nil}.  If this is "
"@code{horizontally}, frames are fit horizontally only.  If this is "
"@code{vertically}, frames are fit vertically only.  Any other non-@code{nil} "
"value means frames can be resized in both dimensions."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:909
msgid ""
"If you have a frame that displays only one window, you can fit that frame to "
"its buffer using the command @code{fit-frame-to-buffer}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:910
#, no-wrap
msgid ""
"Command fit-frame-to-buffer &optional frame max-height min-height max-width "
"min-width only"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:919
msgid ""
"This command adjusts the size of @var{frame} to display the contents of its "
"buffer exactly.  @var{frame} can be any live frame and defaults to the "
"selected one.  Fitting is done only if @var{frame}'s root window is live.  "
"The arguments @var{max-height}, @var{min-height}, @var{max-width} and "
"@var{min-width} specify bounds on the new total size of @var{frame}'s root "
"window.  @var{min-height} and @var{min-width} default to the values of "
"@code{window-min-height} and @code{window-min-width} respectively."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:923
msgid ""
"If the optional argument @var{only} is @code{vertically}, this function may "
"resize the frame vertically only.  If @var{only} is @code{horizontally}, it "
"may resize the frame horizontally only."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:927
msgid ""
"The behavior of @code{fit-frame-to-buffer} can be controlled with the help "
"of the two options listed next."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:928
#, no-wrap
msgid "fit-frame-to-buffer-margins"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:932
msgid ""
"This option can be used to specify margins around frames to be fit by "
"@code{fit-frame-to-buffer}.  Such margins can be useful to avoid, for "
"example, that such frames overlap the taskbar."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:938
msgid ""
"It specifies the numbers of pixels to be left free on the left, above, the "
"right, and below a frame that shall be fit.  The default specifies "
"@code{nil} for each which means to use no margins.  The value specified here "
"can be overridden for a specific frame by that frame's "
"@code{fit-frame-to-buffer-margins} parameter, if present."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:940
#, no-wrap
msgid "fit-frame-to-buffer-sizes"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:946
msgid ""
"This option specifies size boundaries for @code{fit-frame-to-buffer}.  It "
"specifies the total maximum and minimum lines and maximum and minimum "
"columns of the root window of any frame that shall be fit to its buffer.  If "
"any of these values is non-@code{nil}, it overrides the corresponding "
"argument of @code{fit-frame-to-buffer}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:948
#, no-wrap
msgid "Command shrink-window-if-larger-than-buffer &optional window"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:955
msgid ""
"This command attempts to reduce @var{window}'s height as much as possible "
"while still showing its full buffer, but no less than "
"@code{window-min-height} lines.  The return value is non-@code{nil} if the "
"window was resized, and @code{nil} otherwise.  If @var{window} is omitted or "
"@code{nil}, it defaults to the selected window.  Otherwise, it should be a "
"live window."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:959
msgid ""
"This command does nothing if the window is already too short to display all "
"of its buffer, or if any of the buffer is scrolled off-screen, or if the "
"window is the only live window in its frame."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:962
msgid "This command calls @code{fit-window-to-buffer} (see above) to do its work."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:965
#, no-wrap
msgid "balancing window sizes"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:966
#, no-wrap
msgid "Command balance-windows &optional window-or-frame"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:972
msgid ""
"This function balances windows in a way that gives more space to full-width "
"and/or full-height windows.  If @var{window-or-frame} specifies a frame, it "
"balances all windows on that frame.  If @var{window-or-frame} specifies a "
"window, it balances only that window and its siblings (@pxref{Windows and "
"Frames})."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:974
#, no-wrap
msgid "Command balance-windows-area"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:978
msgid ""
"This function attempts to give all windows on the selected frame "
"approximately the same share of the screen area.  Full-width or full-height "
"windows are not given more space than other windows."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:980
#, no-wrap
msgid "maximizing windows"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:981
#, no-wrap
msgid "Command maximize-window &optional window"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:986
msgid ""
"This function attempts to make @var{window} as large as possible, in both "
"dimensions, without resizing its frame or deleting other windows.  If "
"@var{window} is omitted or @code{nil}, it defaults to the selected window."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:988
#, no-wrap
msgid "minimizing windows"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:989
#, no-wrap
msgid "Command minimize-window &optional window"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:994
msgid ""
"This function attempts to make @var{window} as small as possible, in both "
"dimensions, without deleting it or resizing its frame.  If @var{window} is "
"omitted or @code{nil}, it defaults to the selected window."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:999
#, no-wrap
msgid "preserving window sizes"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1006
msgid ""
"A window can get resized explicitly by using one of the functions from the "
"preceding section or implicitly, for example, when resizing an adjacent "
"window, when splitting or deleting a window (@pxref{Splitting Windows}, "
"@pxref{Deleting Windows}) or when resizing the window's frame (@pxref{Size "
"and Position})."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1011
msgid ""
"It is possible to avoid implicit resizing of a specific window when there "
"are one or more other resizable windows on the same frame.  For this "
"purpose, Emacs must be advised to @dfn{preserve} the size of that window.  "
"There are two basic ways to do that."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:1012
#, no-wrap
msgid "window-size-fixed"
msgstr ""

#. type: defvar
#: original_texis/windows.texi:1017
msgid ""
"If this buffer-local variable is non-@code{nil}, the size of any window "
"displaying the buffer cannot normally be changed.  Deleting a window or "
"changing the frame's size may still change the window's size, if there is no "
"choice."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:1021
msgid ""
"If the value is @code{height}, then only the window's height is fixed; if "
"the value is @code{width}, then only the window's width is fixed.  Any other "
"non-@code{nil} value fixes both the width and the height."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:1026
msgid ""
"If this variable is @code{nil}, this does not necessarily mean that any "
"window showing the buffer can be resized in the desired direction.  To "
"determine that, use the function @code{window-resizable}.  @xref{Resizing "
"Windows}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1034
msgid ""
"Often @code{window-size-fixed} is overly aggressive because it inhibits any "
"attempt to explicitly resize or split an affected window as well.  This may "
"even happen after the window has been resized implicitly, for example, when "
"deleting an adjacent window or resizing the window's frame.  The following "
"function tries hard to never disallow resizing such a window explicitly:"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1035
#, no-wrap
msgid "window-preserve-size &optional window horizontal preserve"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1040
msgid ""
"This function (un-)marks the height of window @var{window} as preserved for "
"future resize operations.  @var{window} must be a live window and defaults "
"to the selected one.  If the optional argument @var{horizontal} is "
"non-@code{nil}, it (un-)marks the width of @var{window} as preserved."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1046
msgid ""
"If the optional argument @var{preserve} is @code{t}, this means to preserve "
"the current height/width of @var{window}'s body.  The height/width of "
"@var{window} will change only if Emacs has no better choice.  Resizing a "
"window whose height/width is preserved by this function never throws an "
"error."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1053
msgid ""
"If @var{preserve} is @code{nil}, this means to stop preserving the "
"height/width of @var{window}, lifting any respective restraint induced by a "
"previous call of this function for @var{window}.  Calling "
"@code{enlarge-window}, @code{shrink-window} or @code{fit-window-to-buffer} "
"with @var{window} as argument may also remove the respective restraint."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1057
msgid "@code{window-preserve-size} is currently invoked by the following functions:"
msgstr ""

#. type: item
#: original_texis/windows.texi:1059
#, no-wrap
msgid "fit-window-to-buffer"
msgstr ""

#. type: table
#: original_texis/windows.texi:1063
msgid ""
"If the optional argument @var{preserve-size} of that function "
"(@pxref{Resizing Windows}) is non-@code{nil}, the size established by that "
"function is preserved."
msgstr ""

#. type: item
#: original_texis/windows.texi:1064 original_texis/windows.texi:1508
#, no-wrap
msgid "display-buffer"
msgstr ""

#. type: table
#: original_texis/windows.texi:1068
msgid ""
"If the @var{alist} argument of that function (@pxref{Choosing Window})  "
"contains a @code{preserve-size} entry, the size of the window produced by "
"that function is preserved."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1076
msgid ""
"@code{window-preserve-size} installs a window parameter (@pxref{Window "
"Parameters}) called @code{preserved-size} which is consulted by the window "
"resizing functions.  This parameter will not prevent resizing the window "
"when the window shows another buffer than the one when "
"@code{window-preserve-size} was invoked or if its size has changed since "
"then."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1079
msgid ""
"The following function can be used to check whether the height of a "
"particular window is preserved:"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1080
#, no-wrap
msgid "window-preserved-size &optional window horizontal"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1086
msgid ""
"This function returns the preserved height of window @var{window} in "
"pixels.  @var{window} must be a live window and defaults to the selected "
"one.  If the optional argument @var{horizontal} is non-@code{nil}, it "
"returns the preserved width of @var{window}.  It returns @code{nil} if the "
"size of @var{window} is not preserved."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1091
#, no-wrap
msgid "splitting windows"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1092
#, no-wrap
msgid "window splitting"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1096
msgid ""
"This section describes functions for creating a new window by "
"@dfn{splitting} an existing one."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1097
#, no-wrap
msgid "split-window &optional window size side pixelwise"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1102
msgid ""
"This function creates a new live window next to the window @var{window}.  If "
"@var{window} is omitted or @code{nil}, it defaults to the selected window.  "
"That window is split, and reduced in size.  The space is taken up by the new "
"window, which is returned."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1110
msgid ""
"The optional second argument @var{size} determines the sizes of @var{window} "
"and/or the new window.  If it is omitted or @code{nil}, both windows are "
"given equal sizes; if there is an odd line, it is allocated to the new "
"window.  If @var{size} is a positive number, @var{window} is given "
"@var{size} lines (or columns, depending on the value of @var{side}).  If "
"@var{size} is a negative number, the new window is given @minus{}@var{size} "
"lines (or columns)."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1119
msgid ""
"If @var{size} is @code{nil}, this function obeys the variables "
"@code{window-min-height} and @code{window-min-width} (@pxref{Window "
"Sizes}).  Thus, it signals an error if splitting would result in making a "
"window smaller than those variables specify.  However, a non-@code{nil} "
"value for @var{size} causes those variables to be ignored; in that case, the "
"smallest allowable window is considered to be one that has space for a text "
"area one line tall and/or two columns wide."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1130
msgid ""
"Hence, if @var{size} is specified, it's the caller's responsibility to check "
"whether the emanating windows are large enough to encompass all areas like a "
"mode line or a scroll bar.  The function @code{window-min-size} "
"(@pxref{Window Sizes}) can be used to determine the minimum requirements of "
"@var{window} in this regard.  Since the new window usually inherits areas "
"like the mode line or the scroll bar from @var{window}, that function is "
"also a good guess for the minimum size of the new window.  The caller should "
"specify a smaller size only if it correspondingly removes an inherited area "
"before the next redisplay."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1136
msgid ""
"The optional third argument @var{side} determines the position of the new "
"window relative to @var{window}.  If it is @code{nil} or @code{below}, the "
"new window is placed below @var{window}.  If it is @code{above}, the new "
"window is placed above @var{window}.  In both these cases, @var{size} "
"specifies a total window height, in lines."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1141
msgid ""
"If @var{side} is @code{t} or @code{right}, the new window is placed on the "
"right of @var{window}.  If @var{side} is @code{left}, the new window is "
"placed on the left of @var{window}.  In both these cases, @var{size} "
"specifies a total window width, in columns."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1145
msgid ""
"The optional fourth argument @var{pixelwise}, if non-@code{nil}, means to "
"interpret @var{size} in units of pixels, instead of lines and columns."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1150
msgid ""
"If @var{window} is a live window, the new window inherits various properties "
"from it, including margins and scroll bars.  If @var{window} is an internal "
"window, the new window inherits the properties of the window selected within "
"@var{window}'s frame."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1161
msgid ""
"The behavior of this function may be altered by the window parameters of "
"@var{window}, so long as the variable @code{ignore-window-parameters} is "
"@code{nil}.  If the value of the @code{split-window} window parameter is "
"@code{t}, this function ignores all other window parameters.  Otherwise, if "
"the value of the @code{split-window} window parameter is a function, that "
"function is called with the arguments @var{window}, @var{size}, and "
"@var{side}, in lieu of the usual action of @code{split-window}.  Otherwise, "
"this function obeys the @code{window-atom} or @code{window-side} window "
"parameter, if any.  @xref{Window Parameters}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1169
msgid ""
"As an example, here is a sequence of @code{split-window} calls that yields "
"the window configuration discussed in @ref{Windows and Frames}.  This "
"example demonstrates splitting a live window as well as splitting an "
"internal window.  We begin with a frame containing a single window (a live "
"root window), which we denote by @var{W4}.  Calling @code{(split-window W4)} "
"yields this window configuration:"
msgstr ""

#. type: group
#: original_texis/windows.texi:1184
#, no-wrap
msgid ""
"     ______________________________________\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W4_________________||\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W5_________________||\n"
"    |__________________W3__________________|\n"
"\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1193
msgid ""
"The @code{split-window} call has created a new live window, denoted by "
"@var{W5}.  It has also created a new internal window, denoted by @var{W3}, "
"which becomes the root window and the parent of both @var{W4} and @var{W5}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1196
msgid ""
"Next, we call @code{(split-window W3 nil 'left)}, passing the internal "
"window @var{W3} as the argument.  The result:"
msgstr ""

#. type: group
#: original_texis/windows.texi:1212
#, no-wrap
msgid ""
"     ______________________________________\n"
"    | ______  ____________________________ |\n"
"    ||      || __________________________ ||\n"
"    ||      |||                          |||\n"
"    ||      |||                          |||\n"
"    ||      |||                          |||\n"
"    ||      |||____________W4____________|||\n"
"    ||      || __________________________ ||\n"
"    ||      |||                          |||\n"
"    ||      |||                          |||\n"
"    ||      |||____________W5____________|||\n"
"    ||__W2__||_____________W3_____________ |\n"
"    |__________________W1__________________|\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1219
msgid ""
"A new live window @var{W2} is created, to the left of the internal window "
"@var{W3}.  A new internal window @var{W1} is created, becoming the new root "
"window."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1222
msgid ""
"For interactive use, Emacs provides two commands which always split the "
"selected window.  These call @code{split-window} internally."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1223
#, no-wrap
msgid "Command split-window-right &optional size"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1228
msgid ""
"This function splits the selected window into two side-by-side windows, "
"putting the selected window on the left.  If @var{size} is positive, the "
"left window gets @var{size} columns; if @var{size} is negative, the right "
"window gets @minus{}@var{size} columns."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1230
#, no-wrap
msgid "Command split-window-below &optional size"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1235
msgid ""
"This function splits the selected window into two windows, one above the "
"other, leaving the upper window selected.  If @var{size} is positive, the "
"upper window gets @var{size} lines; if @var{size} is negative, the lower "
"window gets @minus{}@var{size} lines."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:1237
#, no-wrap
msgid "split-window-keep-point"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:1240
msgid ""
"If the value of this variable is non-@code{nil} (the default), "
"@code{split-window-below} behaves as described above."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:1247
msgid ""
"If it is @code{nil}, @code{split-window-below} adjusts point in each of the "
"two windows to minimize redisplay.  (This is useful on slow terminals.)  It "
"selects whichever window contains the screen line that point was previously "
"on.  Note that this only affects @code{split-window-below}, not the "
"lower-level @code{split-window} function."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1252
#, no-wrap
msgid "deleting windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1257
msgid ""
"@dfn{Deleting} a window removes it from the frame's window tree.  If the "
"window is a live window, it disappears from the screen.  If the window is an "
"internal window, its child windows are deleted too."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1262
msgid ""
"Even after a window is deleted, it continues to exist as a Lisp object, "
"until there are no more references to it.  Window deletion can be reversed, "
"by restoring a saved window configuration (@pxref{Window Configurations})."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1263
#, no-wrap
msgid "Command delete-window &optional window"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1269
msgid ""
"This function removes @var{window} from display and returns @code{nil}.  If "
"@var{window} is omitted or @code{nil}, it defaults to the selected window.  "
"If deleting the window would leave no more windows in the window tree (e.g., "
"if it is the only live window in the frame), an error is signaled."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1275
msgid ""
"By default, the space taken up by @var{window} is given to one of its "
"adjacent sibling windows, if any.  However, if the variable "
"@code{window-combination-resize} is non-@code{nil}, the space is "
"proportionally distributed among any remaining windows in the same window "
"combination.  @xref{Recombining Windows}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1286
msgid ""
"The behavior of this function may be altered by the window parameters of "
"@var{window}, so long as the variable @code{ignore-window-parameters} is "
"@code{nil}.  If the value of the @code{delete-window} window parameter is "
"@code{t}, this function ignores all other window parameters.  Otherwise, if "
"the value of the @code{delete-window} window parameter is a function, that "
"function is called with the argument @var{window}, in lieu of the usual "
"action of @code{delete-window}.  Otherwise, this function obeys the "
"@code{window-atom} or @code{window-side} window parameter, if any.  "
"@xref{Window Parameters}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1288
#, no-wrap
msgid "Command delete-other-windows &optional window"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1292
msgid ""
"This function makes @var{window} fill its frame, by deleting other windows "
"as necessary.  If @var{window} is omitted or @code{nil}, it defaults to the "
"selected window.  The return value is @code{nil}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1303
msgid ""
"The behavior of this function may be altered by the window parameters of "
"@var{window}, so long as the variable @code{ignore-window-parameters} is "
"@code{nil}.  If the value of the @code{delete-other-windows} window "
"parameter is @code{t}, this function ignores all other window parameters.  "
"Otherwise, if the value of the @code{delete-other-windows} window parameter "
"is a function, that function is called with the argument @var{window}, in "
"lieu of the usual action of @code{delete-other-windows}.  Otherwise, this "
"function obeys the @code{window-atom} or @code{window-side} window "
"parameter, if any.  @xref{Window Parameters}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1305
#, no-wrap
msgid "Command delete-windows-on &optional buffer-or-name frame"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1312
msgid ""
"This function deletes all windows showing @var{buffer-or-name}, by calling "
"@code{delete-window} on those windows.  @var{buffer-or-name} should be a "
"buffer, or the name of a buffer; if omitted or @code{nil}, it defaults to "
"the current buffer.  If there are no windows showing the specified buffer, "
"this function does nothing.  If the specified buffer is a minibuffer, an "
"error is signaled."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1316
msgid ""
"If there is a dedicated window showing the buffer, and that window is the "
"only one on its frame, this function also deletes that frame if it is not "
"the only frame on the terminal."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1319
msgid "The optional argument @var{frame} specifies which frames to operate on:"
msgstr ""

#. type: code{#1}
#: original_texis/windows.texi:1321 original_texis/windows.texi:1493 original_texis/windows.texi:1829 original_texis/windows.texi:2145 original_texis/windows.texi:2981 original_texis/windows.texi:3954 original_texis/windows.texi:4255
#, no-wrap
msgid "nil"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:1323
msgid "means operate on all frames."
msgstr ""

#. type: code{#1}
#: original_texis/windows.texi:1323 original_texis/windows.texi:1512 original_texis/windows.texi:1834 original_texis/windows.texi:2154 original_texis/windows.texi:4259
#, no-wrap
msgid "t"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:1325
msgid "means operate on the selected frame."
msgstr ""

#. type: code{#1}
#: original_texis/windows.texi:1325 original_texis/windows.texi:1837
#, no-wrap
msgid "visible"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:1327
msgid "means operate on all visible frames."
msgstr ""

#. type: item
#: original_texis/windows.texi:1327 original_texis/windows.texi:1840
#, no-wrap
msgid "0"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:1329
msgid "means operate on all visible or iconified frames."
msgstr ""

#. type: item
#: original_texis/windows.texi:1329 original_texis/windows.texi:1843
#, no-wrap
msgid "A frame"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:1331
msgid "means operate on that frame."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1337
msgid ""
"Note that this argument does not have the same meaning as in other functions "
"which scan all live windows (@pxref{Cyclic Window Ordering}).  Specifically, "
"the meanings of @code{t} and @code{nil} here are the opposite of what they "
"are in those other functions."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1342
#, no-wrap
msgid "recombining windows"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1343
#, no-wrap
msgid "windows, recombining"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1351
msgid ""
"When deleting the last sibling of a window @var{W}, its parent window is "
"deleted too, with @var{W} replacing it in the window tree.  This means that "
"@var{W} must be recombined with its parent's siblings to form a new window "
"combination (@pxref{Windows and Frames}).  In some occasions, deleting a "
"live window may even entail the deletion of two internal windows."
msgstr ""

#. type: group
#: original_texis/windows.texi:1367
#, no-wrap
msgid ""
"     ______________________________________\n"
"    | ______  ____________________________ |\n"
"    ||      || __________________________ ||\n"
"    ||      ||| ___________  ___________ |||\n"
"    ||      ||||           ||           ||||\n"
"    ||      ||||____W6_____||_____W7____||||\n"
"    ||      |||____________W4____________|||\n"
"    ||      || __________________________ ||\n"
"    ||      |||                          |||\n"
"    ||      |||                          |||\n"
"    ||      |||____________W5____________|||\n"
"    ||__W2__||_____________W3_____________ |\n"
"    |__________________W1__________________|\n"
"\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1376
msgid ""
"Deleting @var{W5} in this configuration normally causes the deletion of "
"@var{W3} and @var{W4}.  The remaining live windows @var{W2}, @var{W6} and "
"@var{W7} are recombined to form a new horizontal combination with parent "
"@var{W1}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1383
msgid ""
"Sometimes, however, it makes sense to not delete a parent window like "
"@var{W4}.  In particular, a parent window should not be removed when it was "
"used to preserve a combination embedded in a combination of the same type.  "
"Such embeddings make sense to assure that when you split a window and "
"subsequently delete the new window, Emacs reestablishes the layout of the "
"associated frame as it existed before the splitting."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1386
msgid ""
"Consider a scenario starting with two live windows @var{W2} and @var{W3} and "
"their parent @var{W1}."
msgstr ""

#. type: group
#: original_texis/windows.texi:1403
#, no-wrap
msgid ""
"     ______________________________________\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W2_________________||\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W3_________________||\n"
"    |__________________W1__________________|\n"
"\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1409
msgid "Split @var{W2} to make a new window @var{W4} as follows."
msgstr ""

#. type: group
#: original_texis/windows.texi:1426
#, no-wrap
msgid ""
"     ______________________________________\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W2_________________||\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W4_________________||\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W3_________________||\n"
"    |__________________W1__________________|\n"
"\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1435
msgid ""
"Now, when enlarging a window vertically, Emacs tries to obtain the "
"corresponding space from its lower sibling, provided such a window exists.  "
"In our scenario, enlarging @var{W4} will steal space from @var{W3}."
msgstr ""

#. type: group
#: original_texis/windows.texi:1452
#, no-wrap
msgid ""
"     ______________________________________\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W2_________________||\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W4_________________||\n"
"    | ____________________________________ |\n"
"    ||_________________W3_________________||\n"
"    |__________________W1__________________|\n"
"\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1459
msgid ""
"Deleting @var{W4} will now give its entire space to @var{W2}, including the "
"space earlier stolen from @var{W3}."
msgstr ""

#. type: group
#: original_texis/windows.texi:1476
#, no-wrap
msgid ""
"     ______________________________________\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W2_________________||\n"
"    | ____________________________________ |\n"
"    ||_________________W3_________________||\n"
"    |__________________W1__________________|\n"
"\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1484
msgid ""
"This can be counterintuitive, in particular if @var{W4} were used for "
"displaying a buffer only temporarily (@pxref{Temporary Displays}), and you "
"want to continue working with the initial layout."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1487
msgid ""
"The behavior can be fixed by making a new parent window when splitting "
"@var{W2}.  The variable described next allows that to be done."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:1488
#, no-wrap
msgid "window-combination-limit"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:1491
msgid ""
"This variable controls whether splitting a window shall make a new parent "
"window.  The following values are recognized:"
msgstr ""

#. type: table
#: original_texis/windows.texi:1498
msgid ""
"This means that the new live window is allowed to share the existing parent "
"window, if one exists, provided the split occurs in the same direction as "
"the existing window combination (otherwise, a new internal window is created "
"anyway)."
msgstr ""

#. type: item
#: original_texis/windows.texi:1499
#, no-wrap
msgid "window-size"
msgstr ""

#. type: table
#: original_texis/windows.texi:1503
msgid ""
"In this case @code{display-buffer} makes a new parent window if it is passed "
"a @code{window-height} or @code{window-width} entry in the @var{alist} "
"argument (@pxref{Display Action Functions})."
msgstr ""

#. type: item
#: original_texis/windows.texi:1504
#, no-wrap
msgid "temp-buffer"
msgstr ""

#. type: table
#: original_texis/windows.texi:1507
msgid ""
"This value causes the creation of a new parent window when a window is split "
"for showing a temporary buffer (@pxref{Temporary Displays}) only."
msgstr ""

#. type: table
#: original_texis/windows.texi:1511
msgid ""
"This means that when @code{display-buffer} (@pxref{Choosing Window})  splits "
"a window it always makes a new parent window."
msgstr ""

#. type: table
#: original_texis/windows.texi:1517
msgid ""
"In this case a new parent window is always created when splitting a window.  "
"Thus, if the value of this variable is at all times @code{t}, then at all "
"times every window tree is a binary tree (a tree where each window except "
"the root window has exactly one sibling)."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:1520
msgid "The default is @code{nil}.  Other values are reserved for future use."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:1526
msgid ""
"If, as a consequence of this variable's setting, @code{split-window} makes a "
"new parent window, it also calls @code{set-window-combination-limit} (see "
"below) on the newly-created internal window.  This affects how the window "
"tree is rearranged when the child windows are deleted (see below)."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1530
msgid ""
"If @code{window-combination-limit} is @code{t}, splitting @var{W2} in the "
"initial configuration of our scenario would have produced this:"
msgstr ""

#. type: group
#: original_texis/windows.texi:1547
#, no-wrap
msgid ""
"     ______________________________________\n"
"    | ____________________________________ |\n"
"    || __________________________________ ||\n"
"    |||                                  |||\n"
"    |||________________W2________________|||\n"
"    || __________________________________ ||\n"
"    |||                                  |||\n"
"    |||________________W4________________|||\n"
"    ||_________________W5_________________||\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W3_________________||\n"
"    |__________________W1__________________|\n"
"\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1558
msgid ""
"A new internal window @var{W5} has been created; its children are @var{W2} "
"and the new live window @var{W4}.  Now, @var{W2} is the only sibling of "
"@var{W4}, so enlarging @var{W4} will try to shrink @var{W2}, leaving "
"@var{W3} unaffected.  Observe that @var{W5} represents a vertical "
"combination of two windows embedded in the vertical combination @var{W1}."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1559
#, no-wrap
msgid "window combination limit"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1560
#, no-wrap
msgid "set-window-combination-limit window limit"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1568
msgid ""
"This function sets the @dfn{combination limit} of the window @var{window} to "
"@var{limit}.  This value can be retrieved via the function "
"@code{window-combination-limit}.  See below for its effects; note that it is "
"only meaningful for internal windows.  The @code{split-window} function "
"automatically calls this function, passing it @code{t} as @var{limit}, "
"provided the value of the variable @code{window-combination-limit} is "
"@code{t} when it is called."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1570
#, no-wrap
msgid "window-combination-limit window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1572
msgid "This function returns the combination limit for @var{window}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1580
msgid ""
"The combination limit is meaningful only for an internal window.  If it is "
"@code{nil}, then Emacs is allowed to automatically delete @var{window}, in "
"response to a window deletion, in order to group the child windows of "
"@var{window} with its sibling windows to form a new window combination.  If "
"the combination limit is @code{t}, the child windows of @var{window} are "
"never automatically recombined with its siblings."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1585
msgid ""
"If, in the configuration shown at the beginning of this section, the "
"combination limit of @var{W4} (the parent window of @var{W6} and @var{W7}) "
"is @code{t}, deleting @var{W5} will not implicitly delete @var{W4} too."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1591
msgid ""
"Alternatively, the problems sketched above can be avoided by always resizing "
"all windows in the same combination whenever one of its windows is split or "
"deleted.  This also permits splitting windows that would be otherwise too "
"small for such an operation."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:1592
#, no-wrap
msgid "window-combination-resize"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:1596
msgid ""
"If this variable is @code{nil}, @code{split-window} can only split a window "
"(denoted by @var{window}) if @var{window}'s screen area is large enough to "
"accommodate both itself and the new window."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:1604
msgid ""
"If this variable is @code{t}, @code{split-window} tries to resize all "
"windows that are part of the same combination as @var{window}, in order to "
"accommodate the new window.  In particular, this may allow "
"@code{split-window} to succeed even if @var{window} is a fixed-size window "
"or too small to ordinarily split.  Furthermore, subsequently resizing or "
"deleting @var{window} may resize all other windows in its combination."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:1608
msgid ""
"The default is @code{nil}.  Other values are reserved for future use.  The "
"value of this variable is ignored when @code{window-combination-limit} is "
"non-@code{nil}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1612
msgid ""
"To illustrate the effect of @code{window-combination-resize}, consider the "
"following frame layout."
msgstr ""

#. type: group
#: original_texis/windows.texi:1629
#, no-wrap
msgid ""
"     ______________________________________\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W2_________________||\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W3_________________||\n"
"    |__________________W1__________________|\n"
"\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1636
msgid ""
"If @code{window-combination-resize} is @code{nil}, splitting window @var{W3} "
"leaves the size of @var{W2} unchanged:"
msgstr ""

#. type: group
#: original_texis/windows.texi:1653
#, no-wrap
msgid ""
"     ______________________________________\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W2_________________||\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||_________________W3_________________||\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||_________________W4_________________||\n"
"    |__________________W1__________________|\n"
"\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1661
msgid ""
"If @code{window-combination-resize} is @code{t}, splitting @var{W3} instead "
"leaves all three live windows with approximately the same height:"
msgstr ""

#. type: group
#: original_texis/windows.texi:1678
#, no-wrap
msgid ""
"     ______________________________________\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W2_________________||\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W3_________________||\n"
"    | ____________________________________ |\n"
"    ||                                    ||\n"
"    ||                                    ||\n"
"    ||_________________W4_________________||\n"
"    |__________________W1__________________|\n"
"\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1686
msgid ""
"Deleting any of the live windows @var{W2}, @var{W3} or @var{W4} will "
"distribute its space proportionally among the two remaining live windows."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1690
#, no-wrap
msgid "selecting a window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1692
#, no-wrap
msgid "select-window window &optional norecord"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1699
msgid ""
"This function makes @var{window} the selected window and the window selected "
"within its frame (@pxref{Basic Windows}) and selects that frame.  It also "
"makes @var{window}'s buffer (@pxref{Buffers and Windows}) current and sets "
"that buffer's value of @code{point} to the value of @code{window-point} "
"(@pxref{Window Point}) in @var{window}.  @var{window} must be a live "
"window.  The return value is @var{window}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1704
msgid ""
"By default, this function also moves @var{window}'s buffer to the front of "
"the buffer list (@pxref{Buffer List}), and makes @var{window} the most "
"recently selected window.  However, if the optional argument @var{norecord} "
"is non-@code{nil}, these additional actions are omitted."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1716
msgid ""
"This function runs @code{buffer-list-update-hook} (@pxref{Buffer List})  "
"unless @var{norecord} is non-@code{nil}.  Note that applications and "
"internal routines often temporarily select a window in order to simplify "
"coding.  As a rule, such selections (including those made by the macros "
"@code{save-selected-window} and @code{with-selected-window} below) are not "
"recorded thus avoiding to pollute @code{buffer-list-update-hook}.  "
"Selections that really count are those causing a visible change in the next "
"redisplay of @var{window}'s frame and should be always recorded.  This also "
"means that to run a function each time a window gets selected, putting it on "
"@code{buffer-list-update-hook} should be the right choice."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1718
#, no-wrap
msgid "most recently selected windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1724
msgid ""
"The sequence of calls to @code{select-window} with a non-@code{nil} "
"@var{norecord} argument determines an ordering of windows by their selection "
"time.  The function @code{get-lru-window} can be used to retrieve the least "
"recently selected live window (@pxref{Cyclic Window Ordering})."
msgstr ""

#. type: defmac
#: original_texis/windows.texi:1725
#, no-wrap
msgid "save-selected-window forms@dots{}"
msgstr ""

#. type: defmac
#: original_texis/windows.texi:1730
msgid ""
"This macro records the selected frame, as well as the selected window of "
"each frame, executes @var{forms} in sequence, then restores the earlier "
"selected frame and windows.  It also saves and restores the current buffer.  "
"It returns the value of the last form in @var{forms}."
msgstr ""

#. type: defmac
#: original_texis/windows.texi:1739
msgid ""
"This macro does not save or restore anything about the sizes, arrangement or "
"contents of windows; therefore, if @var{forms} change them, the change "
"persists.  If the previously selected window of some frame is no longer live "
"at the time of exit from @var{forms}, that frame's selected window is left "
"alone.  If the previously selected window is no longer live, then whatever "
"window is selected at the end of @var{forms} remains selected.  The current "
"buffer is restored if and only if it is still live when exiting @var{forms}."
msgstr ""

#. type: defmac
#: original_texis/windows.texi:1742
msgid ""
"This macro changes neither the ordering of recently selected windows nor the "
"buffer list."
msgstr ""

#. type: defmac
#: original_texis/windows.texi:1744
#, no-wrap
msgid "with-selected-window window forms@dots{}"
msgstr ""

#. type: defmac
#: original_texis/windows.texi:1750
msgid ""
"This macro selects @var{window}, executes @var{forms} in sequence, then "
"restores the previously selected window and current buffer.  The ordering of "
"recently selected windows and the buffer list remain unchanged unless you "
"deliberately change them within @var{forms}; for example, by calling "
"@code{select-window} with argument @var{norecord} @code{nil}."
msgstr ""

#. type: defmac
#: original_texis/windows.texi:1753
msgid ""
"This macro does not change the order of recently selected windows or the "
"buffer list."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1755
#, no-wrap
msgid "frame-selected-window &optional frame"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1759
msgid ""
"This function returns the window on @var{frame} that is selected within that "
"frame.  @var{frame} should be a live frame; if omitted or @code{nil}, it "
"defaults to the selected frame."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1761
#, no-wrap
msgid "set-frame-selected-window frame window &optional norecord"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1766
msgid ""
"This function makes @var{window} the window selected within the frame "
"@var{frame}.  @var{frame} should be a live frame; if @code{nil}, it defaults "
"to the selected frame.  @var{window} should be a live window; if @code{nil}, "
"it defaults to the selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1769
msgid ""
"If @var{frame} is the selected frame, this makes @var{window} the selected "
"window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1773
msgid ""
"If the optional argument @var{norecord} is non-@code{nil}, this function "
"does not alter the list of most recently selected windows, nor the buffer "
"list."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1775
#, no-wrap
msgid "window use time"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1776
#, no-wrap
msgid "use time of window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1777
#, no-wrap
msgid "window order by time of last use"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1778
#, no-wrap
msgid "window-use-time &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1781
msgid ""
"This functions returns the use time of window @var{window}.  @var{window} "
"must be a live window and defaults to the selected one."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1788
msgid ""
"The @dfn{use time} of a window is not really a time value, but an integer "
"that does increase monotonically with each call of @code{select-window} with "
"a @code{nil} @var{norecord} argument.  The window with the lowest use time "
"is usually called the least recently used window while the window with the "
"highest use time is called the most recently used one (@pxref{Cyclic Window "
"Ordering})."
msgstr ""

#. type: section
#: original_texis/windows.texi:1792
#, no-wrap
msgid "Cyclic Ordering of Windows"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1793
#, no-wrap
msgid "cyclic ordering of windows"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1794
#, no-wrap
msgid "ordering of windows, cyclic"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1795
#, no-wrap
msgid "window ordering, cyclic"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1801
msgid ""
"When you use the command @kbd{C-x o} (@code{other-window}) to select some "
"other window, it moves through live windows in a specific order.  For any "
"given configuration of windows, this order never varies.  It is called the "
"@dfn{cyclic ordering of windows}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1807
msgid ""
"The ordering is determined by a depth-first traversal of each frame's window "
"tree, retrieving the live windows which are the leaf nodes of the tree "
"(@pxref{Windows and Frames}).  If the minibuffer is active, the minibuffer "
"window is included too.  The ordering is cyclic, so the last window in the "
"sequence is followed by the first one."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1808
#, no-wrap
msgid "next-window &optional window minibuf all-frames"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1809
#, no-wrap
msgid "minibuffer window, and @code{next-window}"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1813
msgid ""
"This function returns a live window, the one following @var{window} in the "
"cyclic ordering of windows.  @var{window} should be a live window; if "
"omitted or @code{nil}, it defaults to the selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1820
msgid ""
"The optional argument @var{minibuf} specifies whether minibuffer windows "
"should be included in the cyclic ordering.  Normally, when @var{minibuf} is "
"@code{nil}, a minibuffer window is included only if it is currently active; "
"this matches the behavior of @kbd{C-x o}.  (Note that a minibuffer window is "
"active as long as its minibuffer is in use; see @ref{Minibuffers})."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1824
msgid ""
"If @var{minibuf} is @code{t}, the cyclic ordering includes all minibuffer "
"windows.  If @var{minibuf} is neither @code{t} nor @code{nil}, minibuffer "
"windows are not included even if they are active."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1827
msgid "The optional argument @var{all-frames} specifies which frames to consider:"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:1833
msgid ""
"means to consider windows on @var{window}'s frame.  If the minibuffer window "
"is considered (as specified by the @var{minibuf} argument), then frames that "
"share the minibuffer window are considered too."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:1836
msgid "means to consider windows on all existing frames."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:1839
msgid "means to consider windows on all visible frames."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:1842
msgid "means to consider windows on all visible or iconified frames."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:1845
msgid "means to consider windows on that specific frame."
msgstr ""

#. type: item
#: original_texis/windows.texi:1846
#, no-wrap
msgid "Anything else"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:1848
msgid "means to consider windows on @var{window}'s frame, and no others."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1853
msgid ""
"If more than one frame is considered, the cyclic ordering is obtained by "
"appending the orderings for those frames, in the same order as the list of "
"all live frames (@pxref{Finding All Frames})."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1855
#, no-wrap
msgid "previous-window &optional window minibuf all-frames"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1859
msgid ""
"This function returns a live window, the one preceding @var{window} in the "
"cyclic ordering of windows.  The other arguments are handled like in "
"@code{next-window}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1861
#, no-wrap
msgid "Command other-window count &optional all-frames"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1869
msgid ""
"This function selects a live window, one @var{count} places from the "
"selected window in the cyclic ordering of windows.  If @var{count} is a "
"positive number, it skips @var{count} windows forwards; if @var{count} is "
"negative, it skips @minus{}@var{count} windows backwards; if @var{count} is "
"zero, that simply re-selects the selected window.  When called "
"interactively, @var{count} is the numeric prefix argument."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1873
msgid ""
"The optional argument @var{all-frames} has the same meaning as in "
"@code{next-window}, like a @code{nil} @var{minibuf} argument to "
"@code{next-window}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:1876
msgid ""
"This function does not select a window that has a non-@code{nil} "
"@code{no-other-window} window parameter (@pxref{Window Parameters})."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1878
#, no-wrap
msgid "walk-windows fun &optional minibuf all-frames"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1881
msgid ""
"This function calls the function @var{fun} once for each live window, with "
"the window as the argument."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1888
msgid ""
"It follows the cyclic ordering of windows.  The optional arguments "
"@var{minibuf} and @var{all-frames} specify the set of windows included; "
"these have the same arguments as in @code{next-window}.  If @var{all-frames} "
"specifies a frame, the first window walked is the first window on that frame "
"(the one returned by @code{frame-first-window}), not necessarily the "
"selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1892
msgid ""
"If @var{fun} changes the window configuration by splitting or deleting "
"windows, that does not alter the set of windows walked, which is determined "
"prior to calling @var{fun} for the first time."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1894
#, no-wrap
msgid "one-window-p &optional no-mini all-frames"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1897
msgid ""
"This function returns @code{t} if the selected window is the only live "
"window, and @code{nil} otherwise."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1903
msgid ""
"If the minibuffer window is active, it is normally considered (so that this "
"function returns @code{nil}).  However, if the optional argument "
"@var{no-mini} is non-@code{nil}, the minibuffer window is ignored even if "
"active.  The optional argument @var{all-frames} has the same meaning as for "
"@code{next-window}."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1905
#, no-wrap
msgid "finding windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1908
msgid ""
"The following functions return a window which satisfies some criterion, "
"without selecting it:"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1909
#, no-wrap
msgid "least recently used window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1910
#, no-wrap
msgid "get-lru-window &optional all-frames dedicated not-selected"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1914
msgid ""
"This function returns a live window which is heuristically the least "
"recently used.  The optional argument @var{all-frames} has the same meaning "
"as in @code{next-window}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1922
msgid ""
"If any full-width windows are present, only those windows are considered.  A "
"minibuffer window is never a candidate.  A dedicated window "
"(@pxref{Dedicated Windows}) is never a candidate unless the optional "
"argument @var{dedicated} is non-@code{nil}.  The selected window is never "
"returned, unless it is the only candidate.  However, if the optional "
"argument @var{not-selected} is non-@code{nil}, this function returns "
"@code{nil} in that case."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1924
#, no-wrap
msgid "most recently used window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1925
#, no-wrap
msgid "get-mru-window &optional all-frames dedicated not-selected"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1929
msgid ""
"This function is like @code{get-lru-window}, but it returns the most "
"recently used window instead.  The meaning of the arguments is the same as "
"described for @code{get-lru-window}."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1931
#, no-wrap
msgid "largest window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1932
#, no-wrap
msgid "get-largest-window &optional all-frames dedicated not-selected"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1936
msgid ""
"This function returns the window with the largest area (height times "
"width).  The optional argument @var{all-frames} specifies the windows to "
"search, and has the same meaning as in @code{next-window}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1944
msgid ""
"A minibuffer window is never a candidate.  A dedicated window "
"(@pxref{Dedicated Windows}) is never a candidate unless the optional "
"argument @var{dedicated} is non-@code{nil}.  The selected window is not a "
"candidate if the optional argument @var{not-selected} is non-@code{nil}.  If "
"the optional argument @var{not-selected} is non-@code{nil} and the selected "
"window is the only candidate, this function returns @code{nil}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1948
msgid ""
"If there are two candidate windows of the same size, this function prefers "
"the one that comes first in the cyclic ordering of windows, starting from "
"the selected window."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1950
#, no-wrap
msgid "window that satisfies a predicate"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1951
#, no-wrap
msgid "conditional selection of windows"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1952
#, no-wrap
msgid "get-window-with-predicate predicate &optional minibuf all-frames default"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1959
msgid ""
"This function calls the function @var{predicate} for each of the windows in "
"the cyclic order of windows in turn, passing it the window as an argument.  "
"If the predicate returns non-@code{nil} for any window, this function stops "
"and returns that window.  If no such window is found, the return value is "
"@var{default} (which defaults to @code{nil})."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1963
msgid ""
"The optional arguments @var{minibuf} and @var{all-frames} specify the "
"windows to search, and have the same meanings as in @code{next-window}."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1968
#, no-wrap
msgid "examining windows"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1969
#, no-wrap
msgid "windows, controlling precisely"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:1970
#, no-wrap
msgid "buffers, controlled in windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:1975
msgid ""
"This section describes low-level functions for examining and setting the "
"contents of windows.  @xref{Switching Buffers}, for higher-level functions "
"for displaying a specific buffer in a window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1976
#, no-wrap
msgid "window-buffer &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1981
msgid ""
"This function returns the buffer that @var{window} is displaying.  If "
"@var{window} is omitted or @code{nil} it defaults to the selected window.  "
"If @var{window} is an internal window, this function returns @code{nil}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1983
#, no-wrap
msgid "set-window-buffer window buffer-or-name &optional keep-margins"
msgstr ""

#. type: defun
#: original_texis/windows.texi:1990
msgid ""
"This function makes @var{window} display @var{buffer-or-name}.  @var{window} "
"should be a live window; if @code{nil}, it defaults to the selected window.  "
"@var{buffer-or-name} should be a buffer, or the name of an existing buffer.  "
"This function does not change which window is selected, nor does it directly "
"change which buffer is current (@pxref{Current Buffer}).  Its return value "
"is @code{nil}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:1994
msgid ""
"If @var{window} is @dfn{strongly dedicated} to a buffer and "
"@var{buffer-or-name} does not specify that buffer, this function signals an "
"error.  @xref{Dedicated Windows}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2000
msgid ""
"By default, this function resets @var{window}'s position, display margins, "
"fringe widths, and scroll bar settings, based on the local variables in the "
"specified buffer.  However, if the optional argument @var{keep-margins} is "
"non-@code{nil}, it leaves the display margins and fringe widths unchanged."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2004
msgid ""
"When writing an application, you should normally use the higher-level "
"functions described in @ref{Switching Buffers}, instead of calling "
"@code{set-window-buffer} directly."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2007
msgid ""
"This runs @code{window-scroll-functions}, followed by "
"@code{window-configuration-change-hook}.  @xref{Window Hooks}."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:2009
#, no-wrap
msgid "buffer-display-count"
msgstr ""

#. type: defvar
#: original_texis/windows.texi:2013
msgid ""
"This buffer-local variable records the number of times a buffer has been "
"displayed in a window.  It is incremented each time @code{set-window-buffer} "
"is called for the buffer."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:2015
#, no-wrap
msgid "buffer-display-time"
msgstr ""

#. type: defvar
#: original_texis/windows.texi:2021
msgid ""
"This buffer-local variable records the time at which a buffer was last "
"displayed in a window.  The value is @code{nil} if the buffer has never been "
"displayed.  It is updated each time @code{set-window-buffer} is called for "
"the buffer, with the value returned by @code{current-time} (@pxref{Time of "
"Day})."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2023
#, no-wrap
msgid "get-buffer-window &optional buffer-or-name all-frames"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2028
msgid ""
"This function returns the first window displaying @var{buffer-or-name} in "
"the cyclic ordering of windows, starting from the selected window "
"(@pxref{Cyclic Window Ordering}).  If no such window exists, the return "
"value is @code{nil}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2033
msgid ""
"@var{buffer-or-name} should be a buffer or the name of a buffer; if omitted "
"or @code{nil}, it defaults to the current buffer.  The optional argument "
"@var{all-frames} specifies which windows to consider:"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2037
msgid "@code{t} means consider windows on all existing frames."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2039 original_texis/windows.texi:2386
msgid "@code{visible} means consider windows on all visible frames."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2041 original_texis/windows.texi:2388
msgid "0 means consider windows on all visible or iconified frames."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2043 original_texis/windows.texi:2390
msgid "A frame means consider windows on that frame only."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2045
msgid "Any other value means consider windows on the selected frame."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2051
msgid ""
"Note that these meanings differ slightly from those of the @var{all-frames} "
"argument to @code{next-window} (@pxref{Cyclic Window Ordering}).  This "
"function may be changed in a future version of Emacs to eliminate this "
"discrepancy."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2053
#, no-wrap
msgid "get-buffer-window-list &optional buffer-or-name minibuf all-frames"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2060
msgid ""
"This function returns a list of all windows currently displaying "
"@var{buffer-or-name}.  @var{buffer-or-name} should be a buffer or the name "
"of an existing buffer.  If omitted or @code{nil}, it defaults to the current "
"buffer.  If the currently selected window displays @var{buffer-or-name}, it "
"will be the first in the list returned by this function."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2065
msgid ""
"The arguments @var{minibuf} and @var{all-frames} have the same meanings as "
"in the function @code{next-window} (@pxref{Cyclic Window Ordering}).  Note "
"that the @var{all-frames} argument does @emph{not} behave exactly like in "
"@code{get-buffer-window}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2067
#, no-wrap
msgid "Command replace-buffer-in-windows &optional buffer-or-name"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2072
msgid ""
"This command replaces @var{buffer-or-name} with some other buffer, in all "
"windows displaying it.  @var{buffer-or-name} should be a buffer, or the name "
"of an existing buffer; if omitted or @code{nil}, it defaults to the current "
"buffer."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2080
msgid ""
"The replacement buffer in each window is chosen via "
"@code{switch-to-prev-buffer} (@pxref{Window History}).  Any dedicated window "
"displaying @var{buffer-or-name} is deleted if possible (@pxref{Dedicated "
"Windows}).  If such a window is the only window on its frame and there are "
"other frames on the same terminal, the frame is deleted as well.  If the "
"dedicated window is the only window on the only frame on its terminal, the "
"buffer is replaced anyway."
msgstr ""

#. type: section
#: original_texis/windows.texi:2084
#, no-wrap
msgid "Switching to a Buffer in a Window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:2085
#, no-wrap
msgid "switching to a buffer"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:2086
#, no-wrap
msgid "displaying a buffer"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2093
msgid ""
"This section describes high-level functions for switching to a specified "
"buffer in some window.  In general, ``switching to a buffer'' means to (1) "
"show the buffer in some window, (2) make that window the selected window "
"(and its frame the selected frame), and (3) make the buffer the current "
"buffer."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2101
msgid ""
"Do @emph{not} use these functions to make a buffer temporarily current just "
"so a Lisp program can access or modify it.  They have side-effects, such as "
"changing window histories (@pxref{Window History}), which will surprise the "
"user if used that way.  If you want to make a buffer current to modify it in "
"Lisp, use @code{with-current-buffer}, @code{save-current-buffer}, or "
"@code{set-buffer}.  @xref{Current Buffer}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2102
#, no-wrap
msgid "Command switch-to-buffer buffer-or-name &optional norecord force-same-window"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2107
msgid ""
"This command attempts to display @var{buffer-or-name} in the selected window "
"and make it the current buffer.  It is often used interactively (as the "
"binding of @kbd{C-x b}), as well as in Lisp programs.  The return value is "
"the buffer switched to."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2114 original_texis/windows.texi:2232
msgid ""
"If @var{buffer-or-name} is @code{nil}, it defaults to the buffer returned by "
"@code{other-buffer} (@pxref{Buffer List}).  If @var{buffer-or-name} is a "
"string that is not the name of any existing buffer, this function creates a "
"new buffer with that name; the new buffer's major mode is determined by the "
"variable @code{major-mode} (@pxref{Major Modes})."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2119
msgid ""
"Normally, the specified buffer is put at the front of the buffer list---both "
"the global buffer list and the selected frame's buffer list (@pxref{Buffer "
"List}).  However, this is not done if the optional argument @var{norecord} "
"is non-@code{nil}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2126
msgid ""
"Sometimes, the selected window may not be suitable for displaying the "
"buffer.  This happens if the selected window is a minibuffer window, or if "
"the selected window is strongly dedicated to its buffer (@pxref{Dedicated "
"Windows}).  In such cases, the command normally tries to display the buffer "
"in some other window, by invoking @code{pop-to-buffer} (see below)."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2135
msgid ""
"If the optional argument @var{force-same-window} is non-@code{nil} and the "
"selected window is not suitable for displaying the buffer, this function "
"always signals an error when called non-interactively.  In interactive use, "
"if the selected window is a minibuffer window, this function will try to use "
"some other window instead.  If the selected window is strongly dedicated to "
"its buffer, the option @code{switch-to-buffer-in-dedicated-window} described "
"next can be used to proceed."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2137
#, no-wrap
msgid "switch-to-buffer-in-dedicated-window"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2141
msgid ""
"This option, if non-@code{nil}, allows @code{switch-to-buffer} to proceed "
"when called interactively and the selected window is strongly dedicated to "
"its buffer."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2143
msgid "The following values are respected:"
msgstr ""

#. type: table
#: original_texis/windows.texi:2147
msgid "Disallows switching and signals an error as in non-interactive use."
msgstr ""

#. type: item
#: original_texis/windows.texi:2148
#, no-wrap
msgid "prompt"
msgstr ""

#. type: table
#: original_texis/windows.texi:2150
msgid "Prompts the user whether to allow switching."
msgstr ""

#. type: item
#: original_texis/windows.texi:2151
#, no-wrap
msgid "pop"
msgstr ""

#. type: table
#: original_texis/windows.texi:2153
msgid "Invokes @code{pop-to-buffer} to proceed."
msgstr ""

#. type: table
#: original_texis/windows.texi:2156
msgid "Marks the selected window as non-dedicated and proceeds."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2160
msgid ""
"This option does not affect non-interactive calls of "
"@code{switch-to-buffer}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2164
msgid ""
"By default, @code{switch-to-buffer} shows the buffer at its position of "
"@code{point}.  This behavior can be tuned using the following option."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2165
#, no-wrap
msgid "switch-to-buffer-preserve-window-point"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2174
msgid ""
"If this variable is @code{nil}, @code{switch-to-buffer} displays the buffer "
"specified by @var{buffer-or-name} at the position of that buffer's "
"@code{point}.  If this variable is @code{already-displayed}, it tries to "
"display the buffer at its previous position in the selected window, provided "
"the buffer is currently displayed in some other window on any visible or "
"iconified frame.  If this variable is @code{t}, @code{switch-to-buffer} "
"unconditionally tries to display the buffer at its previous position in the "
"selected window."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2179
msgid ""
"This variable is ignored if the buffer is already displayed in the selected "
"window or never appeared in it before, or if @code{switch-to-buffer} calls "
"@code{pop-to-buffer} to display the buffer."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2183
msgid ""
"The next two commands are similar to @code{switch-to-buffer}, except for the "
"described features."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2184
#, no-wrap
msgid "Command switch-to-buffer-other-window buffer-or-name &optional norecord"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2188
msgid ""
"This function displays the buffer specified by @var{buffer-or-name} in some "
"window other than the selected window.  It uses the function "
"@code{pop-to-buffer} internally (see below)."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2192
msgid ""
"If the selected window already displays the specified buffer, it continues "
"to do so, but another window is nonetheless found to display it as well."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2195 original_texis/windows.texi:2209
msgid ""
"The @var{buffer-or-name} and @var{norecord} arguments have the same meanings "
"as in @code{switch-to-buffer}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2197
#, no-wrap
msgid "Command switch-to-buffer-other-frame buffer-or-name &optional norecord"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2201
msgid ""
"This function displays the buffer specified by @var{buffer-or-name} in a new "
"frame.  It uses the function @code{pop-to-buffer} internally (see below)."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2206
msgid ""
"If the specified buffer is already displayed in another window, in any frame "
"on the current terminal, this switches to that window instead of creating a "
"new frame.  However, the selected window is never used for this."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2217
msgid ""
"The above commands use the function @code{pop-to-buffer}, which flexibly "
"displays a buffer in some window and selects that window for editing.  In "
"turn, @code{pop-to-buffer} uses @code{display-buffer} for displaying the "
"buffer.  Hence, all the variables affecting @code{display-buffer} will "
"affect it as well.  @xref{Choosing Window}, for the documentation of "
"@code{display-buffer}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2218
#, no-wrap
msgid "Command pop-to-buffer buffer-or-name &optional action norecord"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2225
msgid ""
"This function makes @var{buffer-or-name} the current buffer and displays it "
"in some window, preferably not the window currently selected.  It then "
"selects the displaying window.  If that window is on a different graphical "
"frame, that frame is given input focus if possible (@pxref{Input Focus}).  "
"The return value is the buffer that was switched to."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2238
msgid ""
"If @var{action} is non-@code{nil}, it should be a display action to pass to "
"@code{display-buffer} (@pxref{Choosing Window}).  Alternatively, a "
"non-@code{nil}, non-list value means to pop to a window other than the "
"selected one---even if the buffer is already displayed in the selected "
"window."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2241
msgid ""
"Like @code{switch-to-buffer}, this function updates the buffer list unless "
"@var{norecord} is non-@code{nil}."
msgstr ""

#. type: section
#: original_texis/windows.texi:2245
#, no-wrap
msgid "Choosing a Window for Display"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2253
msgid ""
"The command @code{display-buffer} flexibly chooses a window for display, and "
"displays a specified buffer in that window.  It can be called interactively, "
"via the key binding @kbd{C-x 4 C-o}.  It is also used as a subroutine by "
"many functions and commands, including @code{switch-to-buffer} and "
"@code{pop-to-buffer} (@pxref{Switching Buffers})."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:2254
#, no-wrap
msgid "display action"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:2255
#, no-wrap
msgid "action function, for @code{display-buffer}"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:2256
#, no-wrap
msgid "action alist, for @code{display-buffer}"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2263
msgid ""
"This command performs several complex steps to find a window to display in.  "
"These steps are described by means of @dfn{display actions}, which have the "
"form @code{(@var{function} . @var{alist})}.  Here, @var{function} is either "
"a function or a list of functions, which we refer to as @dfn{action "
"functions}; @var{alist} is an association list, which we refer to as an "
"@dfn{action alist}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2270
msgid ""
"An action function accepts two arguments: the buffer to display and an "
"action alist.  It attempts to display the buffer in some window, picking or "
"creating a window according to its own criteria.  If successful, it returns "
"the window; otherwise, it returns @code{nil}.  @xref{Display Action "
"Functions}, for a list of predefined action functions."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2275
msgid ""
"@code{display-buffer} works by combining display actions from several "
"sources, and calling the action functions in turn, until one of them manages "
"to display the buffer and returns a non-@code{nil} value."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2276
#, no-wrap
msgid "Command display-buffer buffer-or-name &optional action frame"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2281
msgid ""
"This command makes @var{buffer-or-name} appear in some window, without "
"selecting the window or making the buffer current.  The argument "
"@var{buffer-or-name} must be a buffer or the name of an existing buffer.  "
"The return value is the window chosen to display the buffer."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2286
msgid ""
"The optional argument @var{action}, if non-@code{nil}, should normally be a "
"display action (described above).  @code{display-buffer} builds a list of "
"action functions and an action alist, by consolidating display actions from "
"the following sources (in order):"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2290
msgid "The variable @code{display-buffer-overriding-action}."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2293
msgid "The user option @code{display-buffer-alist}."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2296
msgid "The @var{action} argument."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2299
msgid "The user option @code{display-buffer-base-action}."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2302
msgid "The constant @code{display-buffer-fallback-action}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2311
msgid ""
"Each action function is called in turn, passing the buffer as the first "
"argument and the combined action alist as the second argument, until one of "
"the functions returns non-@code{nil}.  The caller can pass "
"@code{(allow-no-window . t)} as an element of the action alist to indicate "
"its readiness to handle the case of not displaying the buffer in a window."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2317
msgid ""
"The argument @var{action} can also have a non-@code{nil}, non-list value.  "
"This has the special meaning that the buffer should be displayed in a window "
"other than the selected one, even if the selected window is already "
"displaying it.  If called interactively with a prefix argument, @var{action} "
"is @code{t}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2323
msgid ""
"The optional argument @var{frame}, if non-@code{nil}, specifies which frames "
"to check when deciding whether the buffer is already displayed.  It is "
"equivalent to adding an element @code{(reusable-frames . @var{frame})} to "
"the action alist of @var{action}.  @xref{Display Action Functions}."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:2325
#, no-wrap
msgid "display-buffer-overriding-action"
msgstr ""

#. type: defvar
#: original_texis/windows.texi:2329
msgid ""
"The value of this variable should be a display action, which is treated with "
"the highest priority by @code{display-buffer}.  The default value is empty, "
"i.e., @code{(nil . nil)}."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2331
#, no-wrap
msgid "display-buffer-alist"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2340
msgid ""
"The value of this option is an alist mapping conditions to display actions.  "
"Each condition may be either a regular expression matching a buffer name or "
"a function that takes two arguments: a buffer name and the @var{action} "
"argument passed to @code{display-buffer}.  If the name of the buffer passed "
"to @code{display-buffer} either matches a regular expression in this alist "
"or the function specified by a condition returns non-@code{nil}, then "
"@code{display-buffer} uses the corresponding display action to display the "
"buffer."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2342
#, no-wrap
msgid "display-buffer-base-action"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2346
msgid ""
"The value of this option should be a display action.  This option can be "
"used to define a standard display action for calls to @code{display-buffer}."
msgstr ""

#. type: defvr
#: original_texis/windows.texi:2348
#, no-wrap
msgid "Constant display-buffer-fallback-action"
msgstr ""

#. type: defvr
#: original_texis/windows.texi:2351
msgid ""
"This display action specifies the fallback behavior for "
"@code{display-buffer} if no other display actions are given."
msgstr ""

#. type: section
#: original_texis/windows.texi:2355
#, no-wrap
msgid "Action Functions for @code{display-buffer}"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2361
msgid ""
"The following basic action functions are defined in Emacs.  Each of these "
"functions takes two arguments: @var{buffer}, the buffer to display, and "
"@var{alist}, an action alist.  Each action function returns the window if it "
"succeeds, and @code{nil} if it fails."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2362
#, no-wrap
msgid "display-buffer-same-window buffer alist"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2367
msgid ""
"This function tries to display @var{buffer} in the selected window.  It "
"fails if the selected window is a minibuffer window or is dedicated to "
"another buffer (@pxref{Dedicated Windows}).  It also fails if @var{alist} "
"has a non-@code{nil} @code{inhibit-same-window} entry."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2369
#, no-wrap
msgid "display-buffer-reuse-window buffer alist"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2372
msgid ""
"This function tries to display @var{buffer} by finding a window that is "
"already displaying it."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2377
msgid ""
"If @var{alist} has a non-@code{nil} @code{inhibit-same-window} entry, the "
"selected window is not eligible for reuse.  If @var{alist} contains a "
"@code{reusable-frames} entry, its value determines which frames to search "
"for a reusable window:"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2382
msgid ""
"@code{nil} means consider windows on the selected frame.  (Actually, the "
"last non-minibuffer frame.)"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2384
msgid "@code{t} means consider windows on all frames."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2395
msgid ""
"Note that these meanings differ slightly from those of the @var{all-frames} "
"argument to @code{next-window} (@pxref{Cyclic Window Ordering})."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2400
msgid ""
"If @var{alist} contains no @code{reusable-frames} entry, this function "
"normally searches just the selected frame; however, if the variable "
"@code{pop-up-frames} is non-@code{nil}, it searches all frames on the "
"current terminal.  @xref{Choosing Window Options}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2404 original_texis/windows.texi:2423
msgid ""
"If this function chooses a window on another frame, it makes that frame "
"visible and, unless @var{alist} contains an @code{inhibit-switch-frame} "
"entry (@pxref{Choosing Window Options}), raises that frame if necessary."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2406
#, no-wrap
msgid "display-buffer-pop-up-frame buffer alist"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2413
msgid ""
"This function creates a new frame, and displays the buffer in that frame's "
"window.  It actually performs the frame creation by calling the function "
"specified in @code{pop-up-frame-function} (@pxref{Choosing Window "
"Options}).  If @var{alist} contains a @code{pop-up-frame-parameters} entry, "
"the associated value is added to the newly created frame's parameters."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2415
#, no-wrap
msgid "display-buffer-use-some-frame buffer alist"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2419
msgid ""
"This function tries to display @var{buffer} by trying to find a frame that "
"meets a predicate (by default any frame other than the current frame)."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2428
msgid ""
"If @var{alist} has a non-@code{nil} @code{frame-predicate} entry, its value "
"is a function taking one argument (a frame), returning non-@code{nil} if the "
"frame is a candidate; this function replaces the default predicate."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2432
msgid ""
"If @var{alist} has a non-@code{nil} @code{inhibit-same-window} entry, the "
"selected window is used; thus if the selected frame has a single window, it "
"is not used."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2434
#, no-wrap
msgid "display-buffer-pop-up-window buffer alist"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2440
msgid ""
"This function tries to display @var{buffer} by splitting the largest or "
"least recently-used window (typically one on the selected frame).  It "
"actually performs the split by calling the function specified in "
"@code{split-window-preferred-function} (@pxref{Choosing Window Options})."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2445
msgid ""
"The size of the new window can be adjusted by supplying @code{window-height} "
"and @code{window-width} entries in @var{alist}.  To adjust the window's "
"height, use an entry whose @sc{car} is @code{window-height} and whose "
"@sc{cdr} is one of:"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2449
msgid "@code{nil} means to leave the height of the new window alone."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2455
msgid ""
"A number specifies the desired height of the new window.  An integer "
"specifies the number of lines of the window.  A floating-point number gives "
"the fraction of the window's height with respect to the height of the "
"frame's root window."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2462
msgid ""
"If the @sc{cdr} specifies a function, that function is called with one "
"argument: the new window.  The function is supposed to adjust the height of "
"the window; its return value is ignored.  Suitable functions are "
"@code{shrink-window-if-larger-than-buffer} and @code{fit-window-to-buffer}, "
"see @ref{Resizing Windows}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2466
msgid ""
"To adjust the window's width, use an entry whose @sc{car} is "
"@code{window-width} and whose @sc{cdr} is one of:"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2470
msgid "@code{nil} means to leave the width of the new window alone."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2476
msgid ""
"A number specifies the desired width of the new window.  An integer "
"specifies the number of columns of the window.  A floating-point number "
"gives the fraction of the window's width with respect to the width of the "
"frame's root window."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:2481
msgid ""
"If the @sc{cdr} specifies a function, that function is called with one "
"argument: the new window.  The function is supposed to adjust the width of "
"the window; its return value is ignored."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2489
msgid ""
"If @var{alist} contains a @code{preserve-size} entry, Emacs will try to "
"preserve the size of the new window during future resize operations "
"(@pxref{Preserving Window Sizes}).  The @sc{cdr} of that entry must be a "
"cons cell whose @sc{car}, if non-@code{nil}, means to preserve the width of "
"the window and whose @sc{cdr}, if non-@code{nil}, means to preserve the "
"height of the window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2493
msgid ""
"This function can fail if no window splitting can be performed for some "
"reason (e.g., if the selected frame has an @code{unsplittable} frame "
"parameter; @pxref{Buffer Parameters})."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2495
#, no-wrap
msgid "display-buffer-below-selected buffer alist"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2501
msgid ""
"This function tries to display @var{buffer} in a window below the selected "
"window.  This means to either split the selected window or use the window "
"below the selected one.  If it does create a new window, it will also adjust "
"its size provided @var{alist} contains a suitable @code{window-height} or "
"@code{window-width} entry, see above."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2503
#, no-wrap
msgid "display-buffer-in-previous-window buffer alist"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2510
msgid ""
"This function tries to display @var{buffer} in a window previously showing "
"it.  If @var{alist} has a non-@code{nil} @code{inhibit-same-window} entry, "
"the selected window is not eligible for reuse.  If @var{alist} contains a "
"@code{reusable-frames} entry, its value determines which frames to search "
"for a suitable window as with @code{display-buffer-reuse-window}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2514
msgid ""
"If @var{alist} has a @code{previous-window} entry, the window specified by "
"that entry will override any other window found by the methods above, even "
"if that window never showed @var{buffer} before."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2516
#, no-wrap
msgid "display-buffer-at-bottom buffer alist"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2519
msgid ""
"This function tries to display @var{buffer} in a window at the bottom of the "
"selected frame."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2523
msgid ""
"This either splits the window at the bottom of the frame or the frame's root "
"window, or reuses an existing window at the bottom of the selected frame."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2525
#, no-wrap
msgid "display-buffer-use-some-window buffer alist"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2529
msgid ""
"This function tries to display @var{buffer} by choosing an existing window "
"and displaying the buffer in that window.  It can fail if all windows are "
"dedicated to another buffer (@pxref{Dedicated Windows})."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2531
#, no-wrap
msgid "display-buffer-no-window buffer alist"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2538
msgid ""
"If @var{alist} has a non-@code{nil} @code{allow-no-window} entry, then this "
"function does not display @code{buffer}.  This allows you to override the "
"default action and avoid displaying the buffer.  It is assumed that when the "
"caller specifies a non-@code{nil} @code{allow-no-window} value it can handle "
"a @code{nil} value returned from @code{display-buffer} in this case."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2542
msgid "To illustrate the use of action functions, consider the following example."
msgstr ""

#. type: group
#: original_texis/windows.texi:2552
#, no-wrap
msgid ""
"(display-buffer\n"
" (get-buffer-create \"*foo*\")\n"
" '((display-buffer-reuse-window\n"
"    display-buffer-pop-up-window\n"
"    display-buffer-pop-up-frame)\n"
"   (reusable-frames . 0)\n"
"   (window-height . 10) (window-width . 40)))\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2563
msgid ""
"Evaluating the form above will cause @code{display-buffer} to proceed as "
"follows: If a buffer called *foo* already appears on a visible or iconified "
"frame, it will reuse its window.  Otherwise, it will try to pop up a new "
"window or, if that is impossible, a new frame and show the buffer there.  If "
"all these steps fail, it will proceed using whatever "
"@code{display-buffer-base-action} and @code{display-buffer-fallback-action} "
"prescribe."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2576
msgid ""
"Furthermore, @code{display-buffer} will try to adjust a reused window "
"(provided *foo* was put by @code{display-buffer} there before) or a "
"popped-up window as follows: If the window is part of a vertical "
"combination, it will set its height to ten lines.  Note that if, instead of "
"the number 10, we specified the function @code{fit-window-to-buffer}, "
"@code{display-buffer} would come up with a one-line window to fit the empty "
"buffer.  If the window is part of a horizontal combination, it sets its "
"width to 40 columns.  Whether a new window is vertically or horizontally "
"combined depends on the shape of the window split and the values of "
"@code{split-window-preferred-function}, @code{split-height-threshold} and "
"@code{split-width-threshold} (@pxref{Choosing Window Options})."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2579
msgid ""
"Now suppose we combine this call with a preexisting setup for "
"@code{display-buffer-alist} as follows."
msgstr ""

#. type: group
#: original_texis/windows.texi:2596
#, no-wrap
msgid ""
"(let ((display-buffer-alist\n"
"       (cons\n"
"        '(\"\\\\*foo\\\\*\"\n"
"          (display-buffer-reuse-window display-buffer-below-selected)\n"
"          (reusable-frames)\n"
"          (window-height . 5))\n"
"        display-buffer-alist)))\n"
"  (display-buffer\n"
"   (get-buffer-create \"*foo*\")\n"
"   '((display-buffer-reuse-window\n"
"      display-buffer-pop-up-window\n"
"      display-buffer-pop-up-frame)\n"
"     (reusable-frames . 0)\n"
"     (window-height . 10) (window-width . 40))))\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2604
msgid ""
"This form will have @code{display-buffer} first try reusing a window that "
"shows *foo* on the selected frame.  If there's no such window, it will try "
"to split the selected window or, if that is impossible, use the window below "
"the selected window."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2612
msgid ""
"If there's no window below the selected one, or the window below the "
"selected one is dedicated to its buffer, @code{display-buffer} will proceed "
"as described in the previous example.  Note, however, that when it tries to "
"adjust the height of any reused or popped-up window, it will in any case try "
"to set its number of lines to 5 since that value overrides the corresponding "
"specification in the @var{action} argument of @code{display-buffer}."
msgstr ""

#. type: section
#: original_texis/windows.texi:2615
#, no-wrap
msgid "Additional Options for Displaying Buffers"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2620
msgid ""
"The behavior of the standard display actions of @code{display-buffer} "
"(@pxref{Choosing Window}) can be modified by a variety of user options."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2621
#, no-wrap
msgid "pop-up-windows"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2625
msgid ""
"If the value of this variable is non-@code{nil}, @code{display-buffer} is "
"allowed to split an existing window to make a new window for displaying in.  "
"This is the default."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2633
msgid ""
"This variable is provided mainly for backward compatibility.  It is obeyed "
"by @code{display-buffer} via a special mechanism in "
"@code{display-buffer-fallback-action}, which only calls the action function "
"@code{display-buffer-pop-up-window} (@pxref{Display Action Functions}) when "
"the value is @code{nil}.  It is not consulted by "
"@code{display-buffer-pop-up-window} itself, which the user may specify "
"directly in @code{display-buffer-alist} etc."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2635
#, no-wrap
msgid "split-window-preferred-function"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2640
msgid ""
"This variable specifies a function for splitting a window, in order to make "
"a new window for displaying a buffer.  It is used by the "
"@code{display-buffer-pop-up-window} action function to actually split the "
"window (@pxref{Display Action Functions})."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2645
msgid ""
"The default value is @code{split-window-sensibly}, which is documented "
"below.  The value must be a function that takes one argument, a window, and "
"return either a new window (which will be used to display the desired "
"buffer) or @code{nil} (which means the splitting failed)."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2647
#, no-wrap
msgid "split-window-sensibly &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2652
msgid ""
"This function tries to split @var{window}, and return the newly created "
"window.  If @var{window} cannot be split, it returns @code{nil}.  If "
"@var{window} is omitted or @code{nil}, it defaults to the selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2663
msgid ""
"This function obeys the usual rules that determine when a window may be "
"split (@pxref{Splitting Windows}).  It first tries to split by placing the "
"new window below, subject to the restriction imposed by "
"@code{split-height-threshold} (see below), in addition to any other "
"restrictions.  If that fails, it tries to split by placing the new window to "
"the right, subject to @code{split-width-threshold} (see below).  If that "
"fails, and the window is the only window on its frame, this function again "
"tries to split and place the new window below, disregarding "
"@code{split-height-threshold}.  If this fails as well, this function gives "
"up and returns @code{nil}."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2665
#, no-wrap
msgid "split-height-threshold"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2671
msgid ""
"This variable, used by @code{split-window-sensibly}, specifies whether to "
"split the window placing the new window below.  If it is an integer, that "
"means to split only if the original window has at least that many lines.  If "
"it is @code{nil}, that means not to split this way."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2673
#, no-wrap
msgid "split-width-threshold"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2679
msgid ""
"This variable, used by @code{split-window-sensibly}, specifies whether to "
"split the window placing the new window to the right.  If the value is an "
"integer, that means to split only if the original window has at least that "
"many columns.  If the value is @code{nil}, that means not to split this way."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2681
#, no-wrap
msgid "even-window-sizes"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2685
msgid ""
"This variable, if non-@code{nil}, causes @code{display-buffer} to even "
"window sizes whenever it reuses an existing window and that window is "
"adjacent to the selected one."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2694
msgid ""
"If its value is @code{width-only}, sizes are evened only if the reused "
"window is on the left or right of the selected one and the selected window "
"is wider than the reused one.  If its value is @code{height-only} sizes are "
"evened only if the reused window is above or beneath the selected window and "
"the selected window is higher than the reused one.  Any other non-@code{nil} "
"value means to even sizes in any of these cases provided the selected window "
"is larger than the reused one in the sense of their combination."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2696
#, no-wrap
msgid "pop-up-frames"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2700
msgid ""
"If the value of this variable is non-@code{nil}, that means "
"@code{display-buffer} may display buffers by making new frames.  The default "
"is @code{nil}."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2704
msgid ""
"A non-@code{nil} value also means that when @code{display-buffer} is looking "
"for a window already displaying @var{buffer-or-name}, it can search any "
"visible or iconified frame, not just the selected frame."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2713
msgid ""
"This variable is provided mainly for backward compatibility.  It is obeyed "
"by @code{display-buffer} via a special mechanism in "
"@code{display-buffer-fallback-action}, which calls the action function "
"@code{display-buffer-pop-up-frame} (@pxref{Display Action Functions})  if "
"the value is non-@code{nil}.  (This is done before attempting to split a "
"window.)  This variable is not consulted by "
"@code{display-buffer-pop-up-frame} itself, which the user may specify "
"directly in @code{display-buffer-alist} etc."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2715
#, no-wrap
msgid "pop-up-frame-function"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2720
msgid ""
"This variable specifies a function for creating a new frame, in order to "
"make a new window for displaying a buffer.  It is used by the "
"@code{display-buffer-pop-up-frame} action function (@pxref{Display Action "
"Functions})."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2725
msgid ""
"The value should be a function that takes no arguments and returns a frame, "
"or @code{nil} if no frame could be created.  The default value is a function "
"that creates a frame using the parameters specified by "
"@code{pop-up-frame-alist} (see below)."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2727
#, no-wrap
msgid "pop-up-frame-alist"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2732
msgid ""
"This variable holds an alist of frame parameters (@pxref{Frame Parameters}), "
"which is used by the default function in @code{pop-up-frame-function} to "
"make a new frame.  The default is @code{nil}."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2734
#, no-wrap
msgid "same-window-buffer-names"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2739
msgid ""
"A list of buffer names for buffers that should be displayed in the selected "
"window.  If a buffer's name is in this list, @code{display-buffer} handles "
"the buffer by showing it in the selected window."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2741
#, no-wrap
msgid "same-window-regexps"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2746
msgid ""
"A list of regular expressions that specify buffers that should be displayed "
"in the selected window.  If the buffer's name matches any of the regular "
"expressions in this list, @code{display-buffer} handles the buffer by "
"showing it in the selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2748
#, no-wrap
msgid "same-window-p buffer-name"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2752
msgid ""
"This function returns @code{t} if displaying a buffer named "
"@var{buffer-name} with @code{display-buffer} would put it in the selected "
"window."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:2756
#, no-wrap
msgid "window history"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2764
msgid ""
"Each window remembers in a list the buffers it has previously displayed, and "
"the order in which these buffers were removed from it.  This history is "
"used, for example, by @code{replace-buffer-in-windows} (@pxref{Buffers and "
"Windows}).  The list is automatically maintained by Emacs, but you can use "
"the following functions to explicitly inspect or alter it:"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2765
#, no-wrap
msgid "window-prev-buffers &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2769
msgid ""
"This function returns a list specifying the previous contents of "
"@var{window}.  The optional argument @var{window} should be a live window "
"and defaults to the selected one."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2776
msgid ""
"Each list element has the form @code{(@var{buffer} @var{window-start} "
"@var{window-pos})}, where @var{buffer} is a buffer previously shown in the "
"window, @var{window-start} is the window start position (@pxref{Window Start "
"and End}) when that buffer was last shown, and @var{window-pos} is the point "
"position (@pxref{Window Point}) when that buffer was last shown in "
"@var{window}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2780
msgid ""
"The list is ordered so that earlier elements correspond to more "
"recently-shown buffers, and the first element usually corresponds to the "
"buffer most recently removed from the window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2782
#, no-wrap
msgid "set-window-prev-buffers window prev-buffers"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2788
msgid ""
"This function sets @var{window}'s previous buffers to the value of "
"@var{prev-buffers}.  The argument @var{window} must be a live window and "
"defaults to the selected one.  The argument @var{prev-buffers} should be a "
"list of the same form as that returned by @code{window-prev-buffers}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2794
msgid ""
"In addition, each buffer maintains a list of @dfn{next buffers}, which is a "
"list of buffers re-shown by @code{switch-to-prev-buffer} (see below).  This "
"list is mainly used by @code{switch-to-prev-buffer} and "
"@code{switch-to-next-buffer} for choosing buffers to switch to."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2795
#, no-wrap
msgid "window-next-buffers &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2800
msgid ""
"This function returns the list of buffers recently re-shown in @var{window} "
"via @code{switch-to-prev-buffer}.  The @var{window} argument must denote a "
"live window or @code{nil} (meaning the selected window)."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2802
#, no-wrap
msgid "set-window-next-buffers window next-buffers"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2807
msgid ""
"This function sets the next buffer list of @var{window} to "
"@var{next-buffers}.  The @var{window} argument should be a live window or "
"@code{nil} (meaning the selected window).  The argument @var{next-buffers} "
"should be a list of buffers."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2818
msgid ""
"The following commands can be used to cycle through the global buffer list, "
"much like @code{bury-buffer} and @code{unbury-buffer}.  However, they cycle "
"according to the specified window's history list, rather than the global "
"buffer list.  In addition, they restore window-specific window start and "
"point positions, and may show a buffer even if it is already shown in "
"another window.  The @code{switch-to-prev-buffer} command, in particular, is "
"used by @code{replace-buffer-in-windows}, @code{bury-buffer} and "
"@code{quit-window} to find a replacement buffer for a window."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2819
#, no-wrap
msgid "Command switch-to-prev-buffer &optional window bury-or-kill"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2826
msgid ""
"This command displays the previous buffer in @var{window}.  The argument "
"@var{window} should be a live window or @code{nil} (meaning the selected "
"window).  If the optional argument @var{bury-or-kill} is non-@code{nil}, "
"this means that the buffer currently shown in @var{window} is about to be "
"buried or killed and consequently should not be switched to in future "
"invocations of this command."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2831
msgid ""
"The previous buffer is usually the buffer shown before the buffer currently "
"shown in @var{window}.  However, a buffer that has been buried or killed, or "
"has been already shown by a recent invocation of "
"@code{switch-to-prev-buffer}, does not qualify as previous buffer."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2837
msgid ""
"If repeated invocations of this command have already shown all buffers "
"previously shown in @var{window}, further invocations will show buffers from "
"the buffer list of the frame @var{window} appears on (@pxref{Buffer List}), "
"trying to skip buffers that are already shown in another window on that "
"frame."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2839
#, no-wrap
msgid "Command switch-to-next-buffer &optional window"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2844
msgid ""
"This command switches to the next buffer in @var{window}, thus undoing the "
"effect of the last @code{switch-to-prev-buffer} command in @var{window}.  "
"The argument @var{window} must be a live window and defaults to the selected "
"one."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2848
msgid ""
"If there is no recent invocation of @code{switch-to-prev-buffer} that can be "
"undone, this function tries to show a buffer from the buffer list of the "
"frame @var{window} appears on (@pxref{Buffer List})."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2853
msgid ""
"By default @code{switch-to-prev-buffer} and @code{switch-to-next-buffer} can "
"switch to a buffer that is already shown in another window on the same "
"frame.  The following option can be used to override this behavior."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2854
#, no-wrap
msgid "switch-to-visible-buffer"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:2862
msgid ""
"If this variable is non-@code{nil}, @code{switch-to-prev-buffer} and "
"@code{switch-to-next-buffer} may switch to a buffer that is already visible "
"on the same frame, provided the buffer was shown in the relevant window "
"before.  If it is @code{nil}, @code{switch-to-prev-buffer} and "
"@code{switch-to-next-buffer} always try to avoid switching to a buffer that "
"is already visible in another window on the same frame.  The default is "
"@code{t}."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:2867
#, no-wrap
msgid "dedicated window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2878
msgid ""
"Functions for displaying a buffer can be told to not use specific windows by "
"marking these windows as @dfn{dedicated} to their buffers.  "
"@code{display-buffer} (@pxref{Choosing Window}) never uses a dedicated "
"window for displaying another buffer in it.  @code{get-lru-window} and "
"@code{get-largest-window} (@pxref{Cyclic Window Ordering}) do not consider "
"dedicated windows as candidates when their @var{dedicated} argument is "
"non-@code{nil}.  The behavior of @code{set-window-buffer} (@pxref{Buffers "
"and Windows}) with respect to dedicated windows is slightly different, see "
"below."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2885
msgid ""
"Functions supposed to remove a buffer from a window or a window from a frame "
"can behave specially when a window they operate on is dedicated.  We will "
"distinguish three basic cases, namely where (1) the window is not the only "
"window on its frame, (2) the window is the only window on its frame but "
"there are other frames on the same terminal left, and (3)  the window is the "
"only window on the only frame on the same terminal."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2893
msgid ""
"In particular, @code{delete-windows-on} (@pxref{Deleting Windows})  handles "
"case (2) by deleting the associated frame and case (3) by showing another "
"buffer in that frame's only window.  The function "
"@code{replace-buffer-in-windows} (@pxref{Buffers and Windows}) which is "
"called when a buffer gets killed, deletes the window in case (1) and behaves "
"like @code{delete-windows-on} otherwise."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2899
msgid ""
"When @code{bury-buffer} (@pxref{Buffer List}) operates on the selected "
"window (which shows the buffer that shall be buried), it handles case (2) by "
"calling @code{frame-auto-hide-function} (@pxref{Quitting Windows}) to deal "
"with the selected frame.  The other two cases are handled as with "
"@code{replace-buffer-in-windows}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2900
#, no-wrap
msgid "window-dedicated-p &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2907
msgid ""
"This function returns non-@code{nil} if @var{window} is dedicated to its "
"buffer and @code{nil} otherwise.  More precisely, the return value is the "
"value assigned by the last call of @code{set-window-dedicated-p} for "
"@var{window}, or @code{nil} if that function was never called with "
"@var{window} as its argument.  The default for @var{window} is the selected "
"window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2909
#, no-wrap
msgid "set-window-dedicated-p window flag"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2912
msgid ""
"This function marks @var{window} as dedicated to its buffer if @var{flag} is "
"non-@code{nil}, and non-dedicated otherwise."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2919
msgid ""
"As a special case, if @var{flag} is @code{t}, @var{window} becomes "
"@dfn{strongly} dedicated to its buffer.  @code{set-window-buffer} signals an "
"error when the window it acts upon is strongly dedicated to its buffer and "
"does not already display the buffer it is asked to display.  Other functions "
"do not treat @code{t} differently from any non-@code{nil} value."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2935
msgid ""
"When you want to get rid of a window used for displaying a buffer, you can "
"call @code{delete-window} or @code{delete-windows-on} (@pxref{Deleting "
"Windows}) to remove that window from its frame.  If the buffer is shown on a "
"separate frame, you might want to call @code{delete-frame} (@pxref{Deleting "
"Frames}) instead.  If, on the other hand, a window has been reused for "
"displaying the buffer, you might prefer showing the buffer previously shown "
"in that window, by calling the function @code{switch-to-prev-buffer} "
"(@pxref{Window History}).  Finally, you might want to either bury "
"(@pxref{Buffer List}) or kill (@pxref{Killing Buffers}) the window's buffer."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:2939
msgid ""
"The following command uses information on how the window for displaying the "
"buffer was obtained in the first place, thus attempting to automate the "
"above decisions for you."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2940
#, no-wrap
msgid "Command quit-window &optional kill window"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:2946
msgid ""
"This command quits @var{window} and buries its buffer.  The argument "
"@var{window} must be a live window and defaults to the selected one.  With "
"prefix argument @var{kill} non-@code{nil}, it kills the buffer instead of "
"burying it.  It calls the function @code{quit-restore-window} described next "
"to deal with the window and its buffer."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2948
#, no-wrap
msgid "quit-restore-window &optional window bury-or-kill"
msgstr ""

#. type: defun
#: original_texis/windows.texi:2952
msgid ""
"This function tries to restore the state of @var{window} that existed before "
"its buffer was displayed in it.  The optional argument @var{window} must be "
"a live window and defaults to the selected one."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2962
msgid ""
"If @var{window} was created specially for displaying its buffer, this "
"function deletes @var{window} provided its frame contains at least one other "
"live window.  If @var{window} is the only window on its frame and there are "
"other frames on the frame's terminal, the value of the optional argument "
"@var{bury-or-kill} determines how to proceed with the window.  If "
"@var{bury-or-kill} equals @code{kill}, the frame is deleted "
"unconditionally.  Otherwise, the fate of the frame is determined by calling "
"@code{frame-auto-hide-function} (see below) with that frame as sole "
"argument."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2969
msgid ""
"Otherwise, this function tries to redisplay the buffer previously shown in "
"@var{window}.  It also tries to restore the window start (@pxref{Window "
"Start and End}) and point (@pxref{Window Point})  positions of the "
"previously shown buffer.  If, in addition, @var{window}'s buffer was "
"temporarily resized, this function will also try to restore the original "
"height of @var{window}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2976
msgid ""
"The cases described so far require that the buffer shown in @var{window} is "
"still the buffer displayed by the last buffer display function for this "
"window.  If another buffer has been shown in the meantime, or the buffer "
"previously shown no longer exists, this function calls "
"@code{switch-to-prev-buffer} (@pxref{Window History}) to show some other "
"buffer instead."
msgstr ""

#. type: defun
#: original_texis/windows.texi:2979
msgid ""
"The optional argument @var{bury-or-kill} specifies how to deal with "
"@var{window}'s buffer.  The following values are handled:"
msgstr ""

#. type: table
#: original_texis/windows.texi:2985
msgid ""
"This means to not deal with the buffer in any particular way.  As a "
"consequence, if @var{window} is not deleted, invoking "
"@code{switch-to-prev-buffer} will usually show the buffer again."
msgstr ""

#. type: item
#: original_texis/windows.texi:2986
#, no-wrap
msgid "append"
msgstr ""

#. type: table
#: original_texis/windows.texi:2991
msgid ""
"This means that if @var{window} is not deleted, its buffer is moved to the "
"end of @var{window}'s list of previous buffers, so it's less likely that a "
"future invocation of @code{switch-to-prev-buffer} will switch to it.  Also, "
"it moves the buffer to the end of the frame's buffer list."
msgstr ""

#. type: item
#: original_texis/windows.texi:2992
#, no-wrap
msgid "bury"
msgstr ""

#. type: table
#: original_texis/windows.texi:2998
msgid ""
"This means that if @var{window} is not deleted, its buffer is removed from "
"@var{window}'s list of previous buffers.  Also, it moves the buffer to the "
"end of the frame's buffer list.  This value provides the most reliable "
"remedy to not have @code{switch-to-prev-buffer} switch to this buffer again "
"without killing the buffer."
msgstr ""

#. type: item
#: original_texis/windows.texi:2999
#, no-wrap
msgid "kill"
msgstr ""

#. type: table
#: original_texis/windows.texi:3001
msgid "This means to kill @var{window}'s buffer."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3006
msgid ""
"@code{quit-restore-window} bases its decisions on information stored in "
"@var{window}'s @code{quit-restore} window parameter (@pxref{Window "
"Parameters}), and resets that parameter to @code{nil} after it's done."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3010
msgid ""
"The following option specifies how to deal with a frame containing just one "
"window that should be either quit, or whose buffer should be buried."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3011
#, no-wrap
msgid "frame-auto-hide-function"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3014
msgid ""
"The function specified by this option is called to automatically hide "
"frames.  This function is called with one argument---a frame."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3021
msgid ""
"The function specified here is called by @code{bury-buffer} (@pxref{Buffer "
"List}) when the selected window is dedicated and shows the buffer to bury.  "
"It is also called by @code{quit-restore-window} (see above) when the frame "
"of the window to quit has been specially created for displaying that "
"window's buffer and the buffer is not killed."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3027
msgid ""
"The default is to call @code{iconify-frame} (@pxref{Visibility of Frames}).  "
"Alternatively, you may specify either @code{delete-frame} (@pxref{Deleting "
"Frames}) to remove the frame from its display, @code{ignore} to leave the "
"frame unchanged, or any other function that can take a frame as its sole "
"argument."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3031
msgid ""
"Note that the function specified by this option is called only if the "
"specified frame contains just one live window and there is at least one "
"other frame on the same terminal."
msgstr ""

#. type: section
#: original_texis/windows.texi:3035
#, no-wrap
msgid "Windows and Point"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3036 original_texis/windows.texi:3815
#, no-wrap
msgid "window position"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3037
#, no-wrap
msgid "window point"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3038
#, no-wrap
msgid "position in window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3039
#, no-wrap
msgid "point in window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3044
msgid ""
"Each window has its own value of point (@pxref{Point}), independent of the "
"value of point in other windows displaying the same buffer.  This makes it "
"useful to have multiple windows showing one buffer."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:3050
msgid ""
"The window point is established when a window is first created; it is "
"initialized from the buffer's point, or from the window point of another "
"window opened on the buffer if such a window exists."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:3058
msgid ""
"Selecting a window sets the value of point in its buffer from the window's "
"value of point.  Conversely, deselecting a window sets the window's value of "
"point from that of the buffer.  Thus, when you switch between windows that "
"display a given buffer, the point value for the selected window is in effect "
"in the buffer, while the point values for the other windows are stored in "
"those windows."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:3062
msgid ""
"As long as the selected window displays the current buffer, the window's "
"point and the buffer's point always move together; they remain equal."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3064
#, no-wrap
msgid "cursor"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3068
msgid ""
"As far as the user is concerned, point is where the cursor is, and when the "
"user switches to another buffer, the cursor jumps to the position of point "
"in that buffer."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3069
#, no-wrap
msgid "window-point &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3074
msgid ""
"This function returns the current position of point in @var{window}.  For a "
"nonselected window, this is the value point would have (in that window's "
"buffer) if that window were selected.  The default for @var{window} is the "
"selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3079
msgid ""
"When @var{window} is the selected window, the value returned is the value of "
"point in that window's buffer.  Strictly speaking, it would be more correct "
"to return the top-level value of point, outside of any @code{save-excursion} "
"forms.  But that value is hard to find."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3081
#, no-wrap
msgid "set-window-point window position"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3084
msgid ""
"This function positions point in @var{window} at position @var{position} in "
"@var{window}'s buffer.  It returns @var{position}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3087
msgid ""
"If @var{window} is selected, this simply does @code{goto-char} in "
"@var{window}'s buffer."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:3089
#, no-wrap
msgid "window-point-insertion-type"
msgstr ""

#. type: defvar
#: original_texis/windows.texi:3093
msgid ""
"This variable specifies the marker insertion type (@pxref{Marker Insertion "
"Types}) of @code{window-point}.  The default is @code{nil}, so "
"@code{window-point} will stay behind text inserted there."
msgstr ""

#. type: section
#: original_texis/windows.texi:3096
#, no-wrap
msgid "The Window Start and End Positions"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3097
#, no-wrap
msgid "window start position"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3098
#, no-wrap
msgid "display-start position"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3106
msgid ""
"Each window maintains a marker used to keep track of a buffer position that "
"specifies where in the buffer display should start.  This position is called "
"the @dfn{display-start} position of the window (or just the @dfn{start}).  "
"The character after this position is the one that appears at the upper left "
"corner of the window.  It is usually, but not inevitably, at the beginning "
"of a text line."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3115
msgid ""
"After switching windows or buffers, and in some other cases, if the window "
"start is in the middle of a line, Emacs adjusts the window start to the "
"start of a line.  This prevents certain operations from leaving the window "
"start at a meaningless point within a line.  This feature may interfere with "
"testing some Lisp code by executing it using the commands of Lisp mode, "
"because they trigger this readjustment.  To test such code, put it into a "
"command and bind the command to a key."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3116
#, no-wrap
msgid "window-start &optional window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3117
#, no-wrap
msgid "window top line"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3121
msgid ""
"This function returns the display-start position of window @var{window}.  If "
"@var{window} is @code{nil}, the selected window is used."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3126
msgid ""
"When you create a window, or display a different buffer in it, the "
"display-start position is set to a display-start position recently used for "
"the same buffer, or to @code{point-min} if the buffer doesn't have any."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3132
msgid ""
"Redisplay updates the window-start position (if you have not specified it "
"explicitly since the previous redisplay)---to make sure point appears on the "
"screen.  Nothing except redisplay automatically changes the window-start "
"position; if you move point, do not expect the window-start position to "
"change in response until after the next redisplay."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3134
#, no-wrap
msgid "window-group-start &optional window"
msgstr ""

#. type: vindex
#: original_texis/windows.texi:3135
#, no-wrap
msgid "window-group-start-function"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3143
msgid ""
"This function is like @code{window-start}, except that when @var{window} is "
"a part of a group of windows (@pxref{Window Group}), "
"@code{window-group-start} returns the start position of the entire group.  "
"This condition holds when the buffer local variable "
"@code{window-group-start-function} is set to a function.  In this case, "
"@code{window-group-start} calls the function with the single argument "
"@var{window}, then returns its result."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3145
#, no-wrap
msgid "window end position"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3146
#, no-wrap
msgid "window-end &optional window update"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3149
msgid ""
"This function returns the position where display of its buffer ends in "
"@var{window}.  The default for @var{window} is the selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3153
msgid ""
"Simply changing the buffer text or moving point does not update the value "
"that @code{window-end} returns.  The value is updated only when Emacs "
"redisplays and redisplay completes without being preempted."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3157
msgid ""
"If the last redisplay of @var{window} was preempted, and did not finish, "
"Emacs does not know the position of the end of display in that window.  In "
"that case, this function returns @code{nil}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3163
msgid ""
"If @var{update} is non-@code{nil}, @code{window-end} always returns an "
"up-to-date value for where display ends, based on the current "
"@code{window-start} value.  If a previously saved value of that position is "
"still valid, @code{window-end} returns that value; otherwise it computes the "
"correct value by scanning the buffer text."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3169
msgid ""
"Even if @var{update} is non-@code{nil}, @code{window-end} does not attempt "
"to scroll the display if point has moved off the screen, the way real "
"redisplay would do.  It does not alter the @code{window-start} value.  In "
"effect, it reports where the displayed text will end if scrolling is not "
"required."
msgstr ""

#. type: vindex
#: original_texis/windows.texi:3171
#, no-wrap
msgid "window-group-end-function"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3172
#, no-wrap
msgid "window-group-end &optional window update"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3181
msgid ""
"This function is like @code{window-end}, except that when @var{window} is a "
"part of a group of windows (@pxref{Window Group}), @code{window-group-end} "
"returns the end position of the entire group.  This condition holds when the "
"buffer local variable @code{window-group-end-function} is set to a "
"function.  In this case, @code{window-group-end} calls the function with the "
"two arguments @var{window} and @var{update}, then returns its result.  The "
"argument @var{update} has the same meaning as in @code{window-end}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3183
#, no-wrap
msgid "set-window-start window position &optional noforce"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3186
msgid ""
"This function sets the display-start position of @var{window} to "
"@var{position} in @var{window}'s buffer.  It returns @var{position}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3195
msgid ""
"The display routines insist that the position of point be visible when a "
"buffer is displayed.  Normally, they change the display-start position (that "
"is, scroll the window) whenever necessary to make point visible.  However, "
"if you specify the start position with this function using @code{nil} for "
"@var{noforce}, it means you want display to start at @var{position} even if "
"that would put the location of point off the screen.  If this does place "
"point off screen, the display routines move point to the left margin on the "
"middle line in the window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3200
msgid ""
"For example, if point @w{is 1} and you set the start of the window @w{to "
"37}, the start of the next line, point will be above the top of the window.  "
"The display routines will automatically move point if it is still 1 when "
"redisplay occurs.  Here is an example:"
msgstr ""

#. type: group
#: original_texis/windows.texi:3205
#, no-wrap
msgid ""
";; @r{Here is what @samp{foo} looks like before executing}\n"
";;   @r{the @code{set-window-start} expression.}\n"
msgstr ""

#. type: group
#: original_texis/windows.texi:3216
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"@point{}This is the contents of buffer foo.\n"
"2\n"
"3\n"
"4\n"
"5\n"
"6\n"
"---------- Buffer: foo ----------\n"
msgstr ""

#. type: group
#: original_texis/windows.texi:3226
#, no-wrap
msgid ""
"(set-window-start\n"
" (selected-window)\n"
" (save-excursion\n"
"   (goto-char 1)\n"
"   (forward-line 1)\n"
"   (point)))\n"
"@result{} 37\n"
msgstr ""

#. type: group
#: original_texis/windows.texi:3238
#, no-wrap
msgid ""
";; @r{Here is what @samp{foo} looks like after executing}\n"
";;   @r{the @code{set-window-start} expression.}\n"
"---------- Buffer: foo ----------\n"
"2\n"
"3\n"
"@point{}4\n"
"5\n"
"6\n"
"---------- Buffer: foo ----------\n"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3244
msgid ""
"If @var{noforce} is non-@code{nil}, and @var{position} would place point off "
"screen at the next redisplay, then redisplay computes a new window-start "
"position that works well with point, and thus @var{position} is not used."
msgstr ""

#. type: vindex
#: original_texis/windows.texi:3246
#, no-wrap
msgid "set-window-group-start-function"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3247
#, no-wrap
msgid "set-window-group-start window position &optional noforce"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3257
msgid ""
"This function is like @code{set-window-start}, except that when @var{window} "
"is a part of a group of windows (@pxref{Window Group}), "
"@code{set-window-group-start} sets the start position of the entire group.  "
"This condition holds when the buffer local variable "
"@code{set-window-group-start-function} is set to a function.  In this case, "
"@code{set-window-group-start} calls the function with the three arguments "
"@var{window}, @var{position}, and @var{noforce}, then returns its result.  "
"The arguments @var{position} and @var{noforce} in this function have the "
"same meaning as in @code{set-window-start}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3259
#, no-wrap
msgid "pos-visible-in-window-p &optional position window partially"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3270
msgid ""
"This function returns non-@code{nil} if @var{position} is within the range "
"of text currently visible on the screen in @var{window}.  It returns "
"@code{nil} if @var{position} is scrolled vertically out of view.  Locations "
"that are partially obscured are not considered visible unless "
"@var{partially} is non-@code{nil}.  The argument @var{position} defaults to "
"the current position of point in @var{window}; @var{window} defaults to the "
"selected window.  If @var{position} is @code{t}, that means to check either "
"the first visible position of the last screen line in @var{window}, or the "
"end-of-buffer position, whichever comes first."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3275
msgid ""
"This function considers only vertical scrolling.  If @var{position} is out "
"of view only because @var{window} has been scrolled horizontally, "
"@code{pos-visible-in-window-p} returns non-@code{nil} anyway.  "
"@xref{Horizontal Scrolling}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3287
msgid ""
"If @var{position} is visible, @code{pos-visible-in-window-p} returns "
"@code{t} if @var{partially} is @code{nil}; if @var{partially} is "
"non-@code{nil}, and the character following @var{position} is fully visible, "
"it returns a list of the form @code{(@var{x} @var{y})}, where @var{x} and "
"@var{y} are the pixel coordinates relative to the top left corner of the "
"window; otherwise it returns an extended list of the form @code{(@var{x} "
"@var{y} @var{rtop} @var{rbot} @var{rowh} @var{vpos})}, where @var{rtop} and "
"@var{rbot} specify the number of off-window pixels at the top and bottom of "
"the row at @var{position}, @var{rowh} specifies the visible height of that "
"row, and @var{vpos} specifies the vertical position (zero-based row number) "
"of that row."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3289
msgid "Here is an example:"
msgstr ""

#. type: group
#: original_texis/windows.texi:3296
#, no-wrap
msgid ""
";; @r{If point is off the screen now, recenter it now.}\n"
"(or (pos-visible-in-window-p\n"
"     (point) (selected-window))\n"
"    (recenter 0))\n"
msgstr ""

#. type: vindex
#: original_texis/windows.texi:3300
#, no-wrap
msgid "pos-visible-in-window-group-p-function"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3301
#, no-wrap
msgid "pos-visible-in-window-group-p &optional position window partially"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3313
msgid ""
"This function is like @code{pos-visible-in-window-p}, except that when "
"@var{window} is a part of a group of windows (@pxref{Window Group}), "
"@code{pos-visible-in-window-group-p} tests the visibility of @var{pos} in "
"the entire group, not just in the single @var{window}.  This condition holds "
"when the buffer local variable @code{pos-visible-in-window-group-p-function} "
"is set to a function.  In this case @code{pos-visible-in-window-group-p} "
"calls the function with the three arguments @var{position}, @var{window}, "
"and @var{partially}, then returns its result.  The arguments @var{position} "
"and @var{partially} have the same meaning as in "
"@code{pos-visible-in-window-p}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3315
#, no-wrap
msgid "window-line-height &optional line window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3323
msgid ""
"This function returns the height of text line @var{line} in @var{window}.  "
"If @var{line} is one of @code{header-line} or @code{mode-line}, "
"@code{window-line-height} returns information about the corresponding line "
"of the window.  Otherwise, @var{line} is a text line number starting from "
"0.  A negative number counts from the end of the window.  The default for "
"@var{line} is the current line in @var{window}; the default for @var{window} "
"is the selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3327
msgid ""
"If the display is not up to date, @code{window-line-height} returns "
"@code{nil}.  In that case, @code{pos-visible-in-window-p} may be used to "
"obtain related information."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3337
msgid ""
"If there is no line corresponding to the specified @var{line}, "
"@code{window-line-height} returns @code{nil}.  Otherwise, it returns a list "
"@code{(@var{height} @var{vpos} @var{ypos} @var{offbot})}, where @var{height} "
"is the height in pixels of the visible part of the line, @var{vpos} and "
"@var{ypos} are the vertical position in lines and pixels of the line "
"relative to the top of the first text line, and @var{offbot} is the number "
"of off-window pixels at the bottom of the text line.  If there are "
"off-window pixels at the top of the (first)  text line, @var{ypos} is "
"negative."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3341
#, no-wrap
msgid "textual scrolling"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3342
#, no-wrap
msgid "scrolling textually"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3348
msgid ""
"@dfn{Textual scrolling} means moving the text up or down through a window.  "
"It works by changing the window's display-start location.  It may also "
"change the value of @code{window-point} to keep point on the screen "
"(@pxref{Window Point})."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3357
msgid ""
"The basic textual scrolling functions are @code{scroll-up} (which scrolls "
"forward) and @code{scroll-down} (which scrolls backward).  In these function "
"names, ``up'' and ``down'' refer to the direction of motion of the buffer "
"text relative to the window.  Imagine that the text is written on a long "
"roll of paper and that the scrolling commands move the paper up and down.  "
"Thus, if you are looking at the middle of a buffer and repeatedly call "
"@code{scroll-down}, you will eventually see the beginning of the buffer."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3364
msgid ""
"Unfortunately, this sometimes causes confusion, because some people tend to "
"think in terms of the opposite convention: they imagine the window moving "
"over text that remains in place, so that ``down'' commands take you to the "
"end of the buffer.  This convention is consistent with fact that such a "
"command is bound to a key named @key{PageDown} on modern keyboards."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3372
msgid ""
"Textual scrolling functions (aside from @code{scroll-other-window})  have "
"unpredictable results if the current buffer is not the one displayed in the "
"selected window.  @xref{Current Buffer}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3379
msgid ""
"If the window contains a row taller than the height of the window (for "
"example in the presence of a large image), the scroll functions will adjust "
"the window's vertical scroll position to scroll the partially visible row.  "
"Lisp callers can disable this feature by binding the variable "
"@code{auto-window-vscroll} to @code{nil} (@pxref{Vertical Scrolling})."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3380
#, no-wrap
msgid "Command scroll-up &optional count"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3383
msgid "This function scrolls forward by @var{count} lines in the selected window."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3388
msgid ""
"If @var{count} is negative, it scrolls backward instead.  If @var{count} is "
"@code{nil} (or omitted), the distance scrolled is "
"@code{next-screen-context-lines} lines less than the height of the window's "
"text area."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3391
msgid ""
"If the selected window cannot be scrolled any further, this function signals "
"an error.  Otherwise, it returns @code{nil}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3393
#, no-wrap
msgid "Command scroll-down &optional count"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3396
msgid "This function scrolls backward by @var{count} lines in the selected window."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3399
msgid ""
"If @var{count} is negative, it scrolls forward instead.  In other respects, "
"it behaves the same way as @code{scroll-up} does."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3401
#, no-wrap
msgid "Command scroll-up-command &optional count"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3407
msgid ""
"This behaves like @code{scroll-up}, except that if the selected window "
"cannot be scrolled any further and the value of the variable "
"@code{scroll-error-top-bottom} is @code{t}, it tries to move to the end of "
"the buffer instead.  If point is already there, it signals an error."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3409
#, no-wrap
msgid "Command scroll-down-command &optional count"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3415
msgid ""
"This behaves like @code{scroll-down}, except that if the selected window "
"cannot be scrolled any further and the value of the variable "
"@code{scroll-error-top-bottom} is @code{t}, it tries to move to the "
"beginning of the buffer instead.  If point is already there, it signals an "
"error."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3417
#, no-wrap
msgid "Command scroll-other-window &optional count"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3421
msgid ""
"This function scrolls the text in another window upward @var{count} lines.  "
"Negative values of @var{count}, or @code{nil}, are handled as in "
"@code{scroll-up}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3426
msgid ""
"You can specify which buffer to scroll by setting the variable "
"@code{other-window-scroll-buffer} to a buffer.  If that buffer isn't already "
"displayed, @code{scroll-other-window} displays it in some window."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3435
msgid ""
"When the selected window is the minibuffer, the next window is normally the "
"leftmost one immediately above it.  You can specify a different window to "
"scroll, when the minibuffer is selected, by setting the variable "
"@code{minibuffer-scroll-window}.  This variable has no effect when any other "
"window is selected.  When it is non-@code{nil} and the minibuffer is "
"selected, it takes precedence over @code{other-window-scroll-buffer}.  "
"@xref{Definition of minibuffer-scroll-window}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3442
msgid ""
"When the minibuffer is active, it is the next window if the selected window "
"is the one at the bottom right corner.  In this case, "
"@code{scroll-other-window} attempts to scroll the minibuffer.  If the "
"minibuffer contains just one line, it has nowhere to scroll to, so the line "
"reappears after the echo area momentarily displays the message @samp{End of "
"buffer}."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:3444
#, no-wrap
msgid "other-window-scroll-buffer"
msgstr ""

#. type: defvar
#: original_texis/windows.texi:3447
msgid ""
"If this variable is non-@code{nil}, it tells @code{scroll-other-window} "
"which buffer's window to scroll."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3449
#, no-wrap
msgid "scroll-margin"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3455
msgid ""
"This option specifies the size of the scroll margin---a minimum number of "
"lines between point and the top or bottom of a window.  Whenever point gets "
"within this many lines of the top or bottom of the window, redisplay scrolls "
"the text automatically (if possible) to move point out of the margin, closer "
"to the center of the window."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3457
#, no-wrap
msgid "scroll-conservatively"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3466
msgid ""
"This variable controls how scrolling is done automatically when point moves "
"off the screen (or into the scroll margin).  If the value is a positive "
"integer @var{n}, then redisplay scrolls the text up to @var{n} lines in "
"either direction, if that will bring point back into proper view.  This "
"behavior is called @dfn{conservative scrolling}.  Otherwise, scrolling "
"happens in the usual way, under the control of other variables such as "
"@code{scroll-up-aggressively} and @code{scroll-down-aggressively}."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3469
msgid ""
"The default value is zero, which means that conservative scrolling never "
"happens."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3471
#, no-wrap
msgid "scroll-down-aggressively"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3479
msgid ""
"The value of this variable should be either @code{nil} or a fraction @var{f} "
"between 0 and 1.  If it is a fraction, that specifies where on the screen to "
"put point when scrolling down.  More precisely, when a window scrolls down "
"because point is above the window start, the new start position is chosen to "
"put point @var{f} part of the window height from the top.  The larger "
"@var{f}, the more aggressive the scrolling."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3483
msgid ""
"A value of @code{nil} is equivalent to .5, since its effect is to center "
"point.  This variable automatically becomes buffer-local when set in any "
"fashion."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3485
#, no-wrap
msgid "scroll-up-aggressively"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3489
msgid ""
"Likewise, for scrolling up.  The value, @var{f}, specifies how far point "
"should be placed from the bottom of the window; thus, as with "
"@code{scroll-up-aggressively}, a larger value scrolls more aggressively."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3491
#, no-wrap
msgid "scroll-step"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3496
msgid ""
"This variable is an older variant of @code{scroll-conservatively}.  The "
"difference is that if its value is @var{n}, that permits scrolling only by "
"precisely @var{n} lines, not a smaller number.  This feature does not work "
"with @code{scroll-margin}.  The default value is zero."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3498
#, no-wrap
msgid "@code{scroll-command} property"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3499
#, no-wrap
msgid "scroll-preserve-screen-position"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3503
msgid ""
"If this option is @code{t}, whenever a scrolling command moves point "
"off-window, Emacs tries to adjust point to keep the cursor at its old "
"vertical position in the window, rather than the window edge."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3507
msgid ""
"If the value is non-@code{nil} and not @code{t}, Emacs adjusts point to keep "
"the cursor at the same vertical position, even if the scrolling command "
"didn't move point off-window."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3510
msgid ""
"This option affects all scroll commands that have a non-@code{nil} "
"@code{scroll-command} symbol property."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3512
#, no-wrap
msgid "next-screen-context-lines"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3518
msgid ""
"The value of this variable is the number of lines of continuity to retain "
"when scrolling by full screens.  For example, @code{scroll-up} with an "
"argument of @code{nil} scrolls so that this many lines at the bottom of the "
"window appear instead at the top.  The default value is @code{2}."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3520
#, no-wrap
msgid "scroll-error-top-bottom"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3524
msgid ""
"If this option is @code{nil} (the default), @code{scroll-up-command} and "
"@code{scroll-down-command} simply signal an error when no more scrolling is "
"possible."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3528
msgid ""
"If the value is @code{t}, these commands instead move point to the beginning "
"or end of the buffer (depending on scrolling direction); only if point is "
"already on that position do they signal an error."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3530
#, no-wrap
msgid "Command recenter &optional count"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3531
#, no-wrap
msgid "centering point"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3535
msgid ""
"This function scrolls the text in the selected window so that point is "
"displayed at a specified vertical position within the window.  It does not "
"move point with respect to the text."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3541
msgid ""
"If @var{count} is a non-negative number, that puts the line containing point "
"@var{count} lines down from the top of the window.  If @var{count} is a "
"negative number, then it counts upward from the bottom of the window, so "
"that @minus{}1 stands for the last usable line in the window."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3546
msgid ""
"If @var{count} is @code{nil} (or a non-@code{nil} list), @code{recenter} "
"puts the line containing point in the middle of the window.  If @var{count} "
"is @code{nil}, this function may redraw the frame, according to the value of "
"@code{recenter-redisplay}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3552
msgid ""
"When @code{recenter} is called interactively, @var{count} is the raw prefix "
"argument.  Thus, typing @kbd{C-u} as the prefix sets the @var{count} to a "
"non-@code{nil} list, while typing @kbd{C-u 4} sets @var{count} to 4, which "
"positions the current line four lines from the top."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3556
msgid ""
"With an argument of zero, @code{recenter} positions the current line at the "
"top of the window.  The command @code{recenter-top-bottom} offers a more "
"convenient way to achieve this."
msgstr ""

#. type: vindex
#: original_texis/windows.texi:3558
#, no-wrap
msgid "recenter-window-group-function"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3559
#, no-wrap
msgid "recenter-window-group &optional count"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3569
msgid ""
"This function is like @code{recenter}, except that when the selected window "
"is part of a group of windows (@pxref{Window Group}), "
"@code{recenter-window-group} scrolls the entire group.  This condition holds "
"when the buffer local variable @code{recenter-window-group-function} is set "
"to a function.  In this case, @code{recenter-window-group} calls the "
"function with the argument @var{count}, then returns its result.  The "
"argument @var{count} has the same meaning as in @code{recenter}, but with "
"respect to the entire window group."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3571
#, no-wrap
msgid "recenter-redisplay"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3575
msgid ""
"If this variable is non-@code{nil}, calling @code{recenter} with a "
"@code{nil} argument redraws the frame.  The default value is @code{tty}, "
"which means only redraw the frame if it is a tty frame."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3577
#, no-wrap
msgid "Command recenter-top-bottom &optional count"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3582
msgid ""
"This command, which is the default binding for @kbd{C-l}, acts like "
"@code{recenter}, except if called with no argument.  In that case, "
"successive calls place point according to the cycling order defined by the "
"variable @code{recenter-positions}."
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3584
#, no-wrap
msgid "recenter-positions"
msgstr ""

#. type: defopt
#: original_texis/windows.texi:3590
msgid ""
"This variable controls how @code{recenter-top-bottom} behaves when called "
"with no argument.  The default value is @code{(middle top bottom)}, which "
"means that successive calls of @code{recenter-top-bottom} with no argument "
"cycle between placing point at the middle, top, and bottom of the window."
msgstr ""

#. type: section
#: original_texis/windows.texi:3594
#, no-wrap
msgid "Vertical Fractional Scrolling"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3595
#, no-wrap
msgid "vertical fractional scrolling"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3596
#, no-wrap
msgid "vertical scroll position"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3605
msgid ""
"@dfn{Vertical fractional scrolling} means shifting text in a window up or "
"down by a specified multiple or fraction of a line.  Each window has a "
"@dfn{vertical scroll position}, which is a number, never less than zero.  It "
"specifies how far to raise the contents of the window.  Raising the window "
"contents generally makes all or part of some lines disappear off the top, "
"and all or part of some other lines appear at the bottom.  The usual value "
"is zero."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3611
msgid ""
"The vertical scroll position is measured in units of the normal line height, "
"which is the height of the default font.  Thus, if the value is .5, that "
"means the window contents are scrolled up half the normal line height.  If "
"it is 3.3, that means the window contents are scrolled up somewhat over "
"three times the normal line height."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3616
msgid ""
"What fraction of a line the vertical scrolling covers, or how many lines, "
"depends on what the lines contain.  A value of .5 could scroll a line whose "
"height is very short off the screen, while a value of 3.3 could scroll just "
"part of the way through a tall line or an image."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3617
#, no-wrap
msgid "window-vscroll &optional window pixels-p"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3622
msgid ""
"This function returns the current vertical scroll position of @var{window}.  "
"The default for @var{window} is the selected window.  If @var{pixels-p} is "
"non-@code{nil}, the return value is measured in pixels, rather than in units "
"of the normal line height."
msgstr ""

#. type: group
#: original_texis/windows.texi:3627
#, no-wrap
msgid ""
"(window-vscroll)\n"
"     @result{} 0\n"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3631
#, no-wrap
msgid "set-window-vscroll window lines &optional pixels-p"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3636
msgid ""
"This function sets @var{window}'s vertical scroll position to @var{lines}.  "
"If @var{window} is @code{nil}, the selected window is used.  The argument "
"@var{lines} should be zero or positive; if not, it is taken as zero."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3641
msgid ""
"The actual vertical scroll position must always correspond to an integral "
"number of pixels, so the value you specify is rounded accordingly."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3643
msgid "The return value is the result of this rounding."
msgstr ""

#. type: group
#: original_texis/windows.texi:3648
#, no-wrap
msgid ""
"(set-window-vscroll (selected-window) 1.2)\n"
"     @result{} 1.13\n"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3653
msgid ""
"If @var{pixels-p} is non-@code{nil}, @var{lines} specifies a number of "
"pixels.  In this case, the return value is @var{lines}."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:3655
#, no-wrap
msgid "auto-window-vscroll"
msgstr ""

#. type: defvar
#: original_texis/windows.texi:3661
msgid ""
"If this variable is non-@code{nil}, the @code{line-move}, @code{scroll-up}, "
"and @code{scroll-down} functions will automatically modify the vertical "
"scroll position to scroll through display rows that are taller than the "
"height of the window, for example in the presence of large images."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3665
#, no-wrap
msgid "horizontal scrolling"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3674
msgid ""
"@dfn{Horizontal scrolling} means shifting the image in the window left or "
"right by a specified multiple of the normal character width.  Each window "
"has a @dfn{horizontal scroll position}, which is a number, never less than "
"zero.  It specifies how far to shift the contents left.  Shifting the window "
"contents left generally makes all or part of some characters disappear off "
"the left, and all or part of some other characters appear at the right.  The "
"usual value is zero."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3681
msgid ""
"The horizontal scroll position is measured in units of the normal character "
"width, which is the width of space in the default font.  Thus, if the value "
"is 5, that means the window contents are scrolled left by 5 times the normal "
"character width.  How many characters actually disappear off to the left "
"depends on their width, and could vary from line to line."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3688
msgid ""
"Because we read from side to side in the inner loop, and from top to bottom "
"in the outer loop, the effect of horizontal scrolling is not like that of "
"textual or vertical scrolling.  Textual scrolling involves selection of a "
"portion of text to display, and vertical scrolling moves the window contents "
"contiguously; but horizontal scrolling causes part of @emph{each line} to go "
"off screen."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3700
msgid ""
"Usually, no horizontal scrolling is in effect; then the leftmost column is "
"at the left edge of the window.  In this state, scrolling to the right is "
"meaningless, since there is no data to the left of the edge to be revealed "
"by it; so this is not allowed.  Scrolling to the left is allowed; it scrolls "
"the first columns of text off the edge of the window and can reveal "
"additional columns on the right that were truncated before.  Once a window "
"has a nonzero amount of leftward horizontal scrolling, you can scroll it "
"back to the right, but only so far as to reduce the net horizontal scroll to "
"zero.  There is no limit to how far left you can scroll, but eventually all "
"the text will disappear off the left edge."
msgstr ""

#. type: vindex
#: original_texis/windows.texi:3701
#, no-wrap
msgid "auto-hscroll-mode"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3708
msgid ""
"If @code{auto-hscroll-mode} is set, redisplay automatically alters the "
"horizontal scrolling of a window as necessary to ensure that point is always "
"visible.  However, you can still set the horizontal scrolling value "
"explicitly.  The value you specify serves as a lower bound for automatic "
"scrolling, i.e., automatic scrolling will not scroll a window to a column "
"less than the specified one."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3709
#, no-wrap
msgid "Command scroll-left &optional count set-minimum"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3713
msgid ""
"This function scrolls the selected window @var{count} columns to the left "
"(or to the right if @var{count} is negative).  The default for @var{count} "
"is the window width, minus 2."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3717
msgid ""
"The return value is the total amount of leftward horizontal scrolling in "
"effect after the change---just like the value returned by "
"@code{window-hscroll} (below)."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3722
msgid ""
"Note that text in paragraphs whose base direction is right-to-left "
"(@pxref{Bidirectional Display}) moves in the opposite direction: e.g., it "
"moves to the right when @code{scroll-left} is invoked with a positive value "
"of @var{count}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3726
msgid ""
"Once you scroll a window as far right as it can go, back to its normal "
"position where the total leftward scrolling is zero, attempts to scroll any "
"farther right have no effect."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3732
msgid ""
"If @var{set-minimum} is non-@code{nil}, the new scroll amount becomes the "
"lower bound for automatic scrolling; that is, automatic scrolling will not "
"scroll a window to a column less than the value returned by this function.  "
"Interactive calls pass non-@code{nil} for @var{set-minimum}."
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3734
#, no-wrap
msgid "Command scroll-right &optional count set-minimum"
msgstr ""

#. type: deffn
#: original_texis/windows.texi:3739
msgid ""
"This function scrolls the selected window @var{count} columns to the right "
"(or to the left if @var{count} is negative).  The default for @var{count} is "
"the window width, minus 2.  Aside from the direction of scrolling, this "
"works just like @code{scroll-left}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3741
#, no-wrap
msgid "window-hscroll &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3747
msgid ""
"This function returns the total leftward horizontal scrolling of "
"@var{window}---the number of columns by which the text in @var{window} is "
"scrolled left past the left margin.  (In right-to-left paragraphs, the value "
"is the total amount of the rightward scrolling instead.)  The default for "
"@var{window} is the selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3750
msgid ""
"The return value is never negative.  It is zero when no horizontal scrolling "
"has been done in @var{window} (which is usually the case)."
msgstr ""

#. type: group
#: original_texis/windows.texi:3756
#, no-wrap
msgid ""
"(window-hscroll)\n"
"     @result{} 0\n"
msgstr ""

#. type: group
#: original_texis/windows.texi:3760
#, no-wrap
msgid ""
"(scroll-left 5)\n"
"     @result{} 5\n"
msgstr ""

#. type: group
#: original_texis/windows.texi:3764
#, no-wrap
msgid ""
"(window-hscroll)\n"
"     @result{} 5\n"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3768
#, no-wrap
msgid "set-window-hscroll window columns"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3775
msgid ""
"This function sets horizontal scrolling of @var{window}.  The value of "
"@var{columns} specifies the amount of scrolling, in terms of columns from "
"the left margin (right margin in right-to-left paragraphs).  The argument "
"@var{columns} should be zero or positive; if not, it is taken as zero.  "
"Fractional values of @var{columns} are not supported at present."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3783
msgid ""
"Note that @code{set-window-hscroll} may appear not to work if you test it by "
"evaluating a call with @kbd{M-:} in a simple way.  What happens is that the "
"function sets the horizontal scroll value and returns, but then redisplay "
"adjusts the horizontal scrolling to make point visible, and this overrides "
"what the function did.  You can observe the function's effect if you call it "
"while point is sufficiently far from the left margin that it will remain "
"visible."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3785
msgid "The value returned is @var{columns}."
msgstr ""

#. type: group
#: original_texis/windows.texi:3790
#, no-wrap
msgid ""
"(set-window-hscroll (selected-window) 10)\n"
"     @result{} 10\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3796
msgid ""
"Here is how you can determine whether a given position @var{position} is off "
"the screen due to horizontal scrolling:"
msgstr ""

#. type: group
#: original_texis/windows.texi:3807
#, no-wrap
msgid ""
"(defun hscroll-on-screen (window position)\n"
"  (save-excursion\n"
"    (goto-char position)\n"
"    (and\n"
"     (>= (- (current-column) (window-hscroll window)) 0)\n"
"     (< (- (current-column) (window-hscroll window))\n"
"        (window-width window)))))\n"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3813
#, no-wrap
msgid "frame-relative coordinate"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:3814
#, no-wrap
msgid "coordinate, relative to frame"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3824
msgid ""
"This section describes functions that report the position of a window.  Most "
"of these functions report positions relative to an origin at the native "
"position of the window's frame (@pxref{Frame Geometry}).  Some functions "
"report positions relative to the origin of the display of the window's "
"frame.  In any case, the origin has the coordinates (0, 0) and X and Y "
"coordinates increase rightward and downward respectively."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3830
msgid ""
"For the following functions, X and Y coordinates are reported in integer "
"character units, i.e., numbers of lines and columns respectively.  On a "
"graphical display, each ``line'' and ``column'' corresponds to the height "
"and width of the default character specified by the frame's default font "
"(@pxref{Frame Font})."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3831
#, no-wrap
msgid "window-edges &optional window body absolute pixelwise"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3835
msgid ""
"This function returns a list of the edge coordinates of @var{window}.  If "
"@var{window} is omitted or @code{nil}, it defaults to the selected window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3842
msgid ""
"The return value has the form @code{(@var{left} @var{top} @var{right} "
"@var{bottom})}.  These list elements are, respectively, the X coordinate of "
"the leftmost column occupied by the window, the Y coordinate of the topmost "
"row, the X coordinate one column to the right of the rightmost column, and "
"the Y coordinate one row down from the bottommost row."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3848
msgid ""
"Note that these are the actual outer edges of the window, including any "
"header line, mode line, scroll bar, fringes, window divider and display "
"margins.  On a text terminal, if the window has a neighbor on its right, its "
"right edge includes the separator line between the window and its neighbor."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3854
msgid ""
"If the optional argument @var{body} is @code{nil}, this means to return the "
"edges corresponding to the total size of @var{window}.  @var{body} "
"non-@code{nil} means to return the edges of @var{window}'s body (aka text "
"area).  If @var{body} is non-@code{nil}, @var{window} must specify a live "
"window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3860
msgid ""
"If the optional argument @var{absolute} is @code{nil}, this means to return "
"edges relative to the native position of @var{window}'s frame.  "
"@var{absolute} non-@code{nil} means to return coordinates relative to the "
"origin (0, 0) of @var{window}'s display.  On non-graphical systems this "
"argument has no effect."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3868
msgid ""
"If the optional argument @var{pixelwise} is @code{nil}, this means to return "
"the coordinates in terms of the default character width and height of "
"@var{window}'s frame (@pxref{Frame Font}), rounded if necessary.  "
"@var{pixelwise} non-@code{nil} means to return the coordinates in pixels.  "
"Note that the pixel specified by @var{right} and @var{bottom} is immediately "
"outside of these edges.  If @var{absolute} is non-@code{nil}, "
"@var{pixelwise} is implicitly non-@code{nil} too."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3870
#, no-wrap
msgid "window-body-edges &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3874
msgid ""
"This function returns the edges of @var{window}'s body (@pxref{Window "
"Sizes}).  Calling @code{(window-body-edges window)} is equivalent to calling "
"@code{(window-edges window t)}, see above."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3878
#, no-wrap
msgid "window-left-column &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3883
#, no-wrap
msgid ""
"This function returns the leftmost column of @var{window}.  This value\n"
"equals the @var{left} entry in the list returned by @code{(window-edges\n"
"window)} minus the number of columns occupied by the internal border of\n"
"@var{window}'s frame.\n"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3885
#, no-wrap
msgid "window-top-line &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3890
#, no-wrap
msgid ""
"This function returns the topmost row of @var{window}.  This value is\n"
"equal to the @var{top} entry in the list returned by @code{(window-edges\n"
"window)} minus the number of lines occupied by the internal border of\n"
"@var{window}'s frame.\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3895
msgid ""
"The following functions can be used to relate a set of frame-relative "
"coordinates to a window:"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3896
#, no-wrap
msgid "window-at x y &optional frame"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3900
msgid ""
"This function returns the live window at the coordinates @var{x} and @var{y} "
"given in default character sizes (@pxref{Frame Font}) relative to the native "
"position of @var{frame} (@pxref{Frame Geometry})."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3904
msgid ""
"If there is no window at that position, the return value is @code{nil}.  If "
"@var{frame} is omitted or @code{nil}, it defaults to the selected frame."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3906
#, no-wrap
msgid "coordinates-in-window-p coordinates window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3910
msgid ""
"This function checks whether a window @var{window} occupies the frame "
"relative coordinates @var{coordinates}, and if so, which part of the window "
"that is.  @var{window} should be a live window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3915
msgid ""
"@var{coordinates} should be a cons cell of the form @code{(@var{x} "
". @var{y})}, where @var{x} and @var{y} are given in default character sizes "
"(@pxref{Frame Font}) relative to the native position of @var{window}'s frame "
"(@pxref{Frame Geometry})."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3918
msgid ""
"If there is no window at the specified position, the return value is "
"@code{nil} .  Otherwise, the return value is one of the following:"
msgstr ""

#. type: item
#: original_texis/windows.texi:3920
#, no-wrap
msgid "(@var{relx} . @var{rely})"
msgstr ""

#. type: table
#: original_texis/windows.texi:3925
msgid ""
"The coordinates are inside @var{window}.  The numbers @var{relx} and "
"@var{rely} are the equivalent window-relative coordinates for the specified "
"position, counting from 0 at the top left corner of the window."
msgstr ""

#. type: item
#: original_texis/windows.texi:3926
#, no-wrap
msgid "mode-line"
msgstr ""

#. type: table
#: original_texis/windows.texi:3928
msgid "The coordinates are in the mode line of @var{window}."
msgstr ""

#. type: item
#: original_texis/windows.texi:3929
#, no-wrap
msgid "header-line"
msgstr ""

#. type: table
#: original_texis/windows.texi:3931
msgid "The coordinates are in the header line of @var{window}."
msgstr ""

#. type: item
#: original_texis/windows.texi:3932
#, no-wrap
msgid "right-divider"
msgstr ""

#. type: table
#: original_texis/windows.texi:3935
msgid ""
"The coordinates are in the divider separating @var{window} from a window on "
"the right."
msgstr ""

#. type: item
#: original_texis/windows.texi:3936
#, no-wrap
msgid "bottom-divider"
msgstr ""

#. type: table
#: original_texis/windows.texi:3939
msgid ""
"The coordinates are in the divider separating @var{window} from a window "
"beneath."
msgstr ""

#. type: item
#: original_texis/windows.texi:3940
#, no-wrap
msgid "vertical-line"
msgstr ""

#. type: table
#: original_texis/windows.texi:3945
msgid ""
"The coordinates are in the vertical line between @var{window} and its "
"neighbor to the right.  This value occurs only if the window doesn't have a "
"scroll bar; positions in a scroll bar are considered outside the window for "
"these purposes."
msgstr ""

#. type: item
#: original_texis/windows.texi:3946
#, no-wrap
msgid "left-fringe"
msgstr ""

#. type: itemx
#: original_texis/windows.texi:3947
#, no-wrap
msgid "right-fringe"
msgstr ""

#. type: table
#: original_texis/windows.texi:3949
msgid "The coordinates are in the left or right fringe of the window."
msgstr ""

#. type: item
#: original_texis/windows.texi:3950
#, no-wrap
msgid "left-margin"
msgstr ""

#. type: itemx
#: original_texis/windows.texi:3951
#, no-wrap
msgid "right-margin"
msgstr ""

#. type: table
#: original_texis/windows.texi:3953
msgid "The coordinates are in the left or right margin of the window."
msgstr ""

#. type: table
#: original_texis/windows.texi:3956
msgid "The coordinates are not in any part of @var{window}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3960
msgid ""
"The function @code{coordinates-in-window-p} does not require a frame as "
"argument because it always uses the frame that @var{window} is on."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:3966
msgid ""
"The following functions return window positions in pixels, rather than "
"character units.  Though mostly useful on graphical displays, they can also "
"be called on text terminals, where the screen area of each text character is "
"taken to be one pixel."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3967
#, no-wrap
msgid "window-pixel-edges &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3971
msgid ""
"This function returns a list of pixel coordinates for the edges of "
"@var{window}.  Calling @code{(window-pixel-edges window)} is equivalent to "
"calling @code{(window-edges window nil nil t)}, see above."
msgstr ""

#. type: defun
#: original_texis/windows.texi:3975
#, no-wrap
msgid "window-pixel-left &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3981
#, no-wrap
msgid ""
"This function returns the left pixel edge of window @var{window}.  This\n"
"value equals the @var{left} entry in the list returned by\n"
"@code{(window-pixel-edges window)} minus the number of pixels occupied\n"
"by the internal border of @var{window}'s frame.  @var{window} must be a\n"
"valid window and defaults to the selected one.\n"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3983
#, no-wrap
msgid "window-pixel-top &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3989
#, no-wrap
msgid ""
"This function returns the top pixel edge of window @var{window}.  This\n"
"value is equal to the @var{top} entry in the list returned by\n"
"@code{(window-pixel-edges window)} minus the number of pixels occupied\n"
"by the internal border of @var{window}'s frame.  @var{window} must be a\n"
"valid window and defaults to the selected one.\n"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3992
#, no-wrap
msgid "window-body-pixel-edges &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:3996
msgid ""
"This function returns the pixel edges of @var{window}'s body.  Calling "
"@code{(window-body-pixel-edges window)} is equivalent to calling "
"@code{(window-edges window t nil t)}, see above."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:4000
msgid ""
"The following functions return window positions in pixels, relative to the "
"origin of the display screen rather than that of the frame:"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4001
#, no-wrap
msgid "window-absolute-pixel-edges &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4006
msgid ""
"This function returns the pixel coordinates of @var{WINDOW} relative to an "
"origin at (0, 0) of the display of @var{window}'s frame.  Calling "
"@code{(window-absolute-pixel-edges)} is equivalent to calling "
"@code{(window-edges window nil t t)}, see above."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4008
#, no-wrap
msgid "window-absolute-body-pixel-edges &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4013
msgid ""
"This function returns the pixel coordinates of @var{WINDOW}'s body relative "
"to an origin at (0, 0) of the display of @var{window}'s frame.  Calling "
"@code{(window-absolute-body-pixel-edges window)} is equivalent to calling "
"@code{(window-edges window t t t)}, see above."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4017
msgid ""
"Combined with @code{set-mouse-absolute-pixel-position}, this function can be "
"used to move the mouse pointer to an arbitrary buffer position visible in "
"some window:"
msgstr ""

#. type: group
#: original_texis/windows.texi:4025
#, no-wrap
msgid ""
"(let ((edges (window-absolute-body-pixel-edges))\n"
"      (position (pos-visible-in-window-p nil nil t)))\n"
"  (set-mouse-absolute-pixel-position\n"
"   (+ (nth 0 edges) (nth 0 position))\n"
"   (+ (nth 1 edges) (nth 1 position))))\n"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4032
msgid ""
"On a graphical terminal this form ``warps'' the mouse cursor to the upper "
"left corner of the glyph at the selected window's point.  A position "
"calculated this way can be also used to show a tooltip window there."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:4036
msgid ""
"The following function returns the screen coordinates of a buffer position "
"visible in a window:"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4037
#, no-wrap
msgid "window-absolute-pixel-position &optional position window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4044
msgid ""
"If the buffer position @var{position} is visible in window @var{window}, "
"this function returns the display coordinates of the upper/left corner of "
"the glyph at @var{position}.  The return value is a cons of the X- and "
"Y-coordinates of that corner, relative to an origin at (0, 0) of "
"@var{window}'s display.  It returns @code{nil} if @var{position} is not "
"visible in @var{window}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4048
msgid ""
"@var{window} must be a live window and defaults to the selected window.  "
"@var{position} defaults to the value of @code{window-point} of @var{window}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4051
msgid ""
"This means that in order to move the mouse pointer to the position of point "
"in the selected window, it's sufficient to write:"
msgstr ""

#. type: group
#: original_texis/windows.texi:4057
#, no-wrap
msgid ""
"(let ((position (window-absolute-pixel-position)))\n"
"  (set-mouse-absolute-pixel-position\n"
"   (car position) (cdr position)))\n"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:4064
#, no-wrap
msgid "window configurations"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:4065
#, no-wrap
msgid "saving window information"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:4074
msgid ""
"A @dfn{window configuration} records the entire layout of one frame---all "
"windows, their sizes, which buffers they contain, how those buffers are "
"scrolled, and their value of point; also their fringes, margins, and scroll "
"bar settings.  It also includes the value of "
"@code{minibuffer-scroll-window}.  As a special exception, the window "
"configuration does not record the value of point in the selected window for "
"the current buffer."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:4079
msgid ""
"You can bring back an entire frame layout by restoring a previously saved "
"window configuration.  If you want to record the layout of all frames "
"instead of just one, use a frame configuration instead of a window "
"configuration.  @xref{Frame Configurations}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4080
#, no-wrap
msgid "current-window-configuration &optional frame"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4086
msgid ""
"This function returns a new object representing @var{frame}'s current window "
"configuration.  The default for @var{frame} is the selected frame.  The "
"variable @code{window-persistent-parameters} specifies which window "
"parameters (if any) are saved by this function.  @xref{Window Parameters}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4088
#, no-wrap
msgid "set-window-configuration configuration"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4092
msgid ""
"This function restores the configuration of windows and buffers as specified "
"by @var{configuration}, for the frame that @var{configuration} was created "
"for."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4101
msgid ""
"The argument @var{configuration} must be a value that was previously "
"returned by @code{current-window-configuration}.  The configuration is "
"restored in the frame from which @var{configuration} was made, whether that "
"frame is selected or not.  This always counts as a window size change and "
"triggers execution of the @code{window-size-change-functions} (@pxref{Window "
"Hooks}), because @code{set-window-configuration} doesn't know how to tell "
"whether the new configuration actually differs from the old one."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4106
msgid ""
"If the frame from which @var{configuration} was saved is dead, all this "
"function does is restore the three variables @code{window-min-height}, "
"@code{window-min-width} and @code{minibuffer-scroll-window}.  In this case, "
"the function returns @code{nil}.  Otherwise, it returns @code{t}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4109
msgid ""
"Here is a way of using this function to get the same effect as "
"@code{save-window-excursion}:"
msgstr ""

#. type: group
#: original_texis/windows.texi:4117
#, no-wrap
msgid ""
"(let ((config (current-window-configuration)))\n"
"  (unwind-protect\n"
"      (progn (split-window-below nil)\n"
"             @dots{})\n"
"    (set-window-configuration config)))\n"
msgstr ""

#. type: defmac
#: original_texis/windows.texi:4121
#, no-wrap
msgid "save-window-excursion forms@dots{}"
msgstr ""

#. type: defmac
#: original_texis/windows.texi:4126
msgid ""
"This macro records the window configuration of the selected frame, executes "
"@var{forms} in sequence, then restores the earlier window configuration.  "
"The return value is the value of the final form in @var{forms}."
msgstr ""

#. type: defmac
#: original_texis/windows.texi:4133
msgid ""
"Most Lisp code should not use this macro; @code{save-selected-window} is "
"typically sufficient.  In particular, this macro cannot reliably prevent the "
"code in @var{forms} from opening new windows, because new windows might be "
"opened in other frames (@pxref{Choosing Window}), and "
"@code{save-window-excursion} only saves and restores the window "
"configuration on the current frame."
msgstr ""

#. type: defmac
#: original_texis/windows.texi:4137
msgid ""
"Do not use this macro in @code{window-size-change-functions}; exiting the "
"macro triggers execution of @code{window-size-change-functions}, leading to "
"an endless loop."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4139
#, no-wrap
msgid "window-configuration-p object"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4141
msgid "This function returns @code{t} if @var{object} is a window configuration."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4143
#, no-wrap
msgid "compare-window-configurations config1 config2"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4148
msgid ""
"This function compares two window configurations as regards the structure of "
"windows, but ignores the values of point and the saved scrolling "
"positions---it can return @code{t} even if those aspects differ."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4152
msgid ""
"The function @code{equal} can also compare two window configurations; it "
"regards configurations as unequal if they differ in any respect, even a "
"saved point."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4154
#, no-wrap
msgid "window-configuration-frame config"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4157
msgid ""
"This function returns the frame for which the window configuration "
"@var{config} was made."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:4163
msgid ""
"Other primitives to look inside of window configurations would make sense, "
"but are not implemented because we did not need them.  See the file "
"@file{winner.el} for some more operations on windows configurations."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:4171
msgid ""
"The objects returned by @code{current-window-configuration} die together "
"with the Emacs process.  In order to store a window configuration on disk "
"and read it back in another Emacs session, you can use the functions "
"described next.  These functions are also useful to clone the state of a "
"frame into an arbitrary live window (@code{set-window-configuration} "
"effectively clones the windows of a frame into the root window of that very "
"frame only)."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:4172
#, no-wrap
msgid "window state"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4173
#, no-wrap
msgid "window-state-get &optional window writable"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4177
msgid ""
"This function returns the state of @var{window} as a Lisp object.  The "
"argument @var{window} must be a valid window and defaults to the root window "
"of the selected frame."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4182
msgid ""
"If the optional argument @var{writable} is non-@code{nil}, this means to not "
"use markers for sampling positions like @code{window-point} or "
"@code{window-start}.  This argument should be non-@code{nil} when the state "
"will be written to disk and read back in another session."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4186
msgid ""
"Together, the argument @var{writable} and the variable "
"@code{window-persistent-parameters} specify which window parameters are "
"saved by this function.  @xref{Window Parameters}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:4192
msgid ""
"The value returned by @code{window-state-get} can be used in the same "
"session to make a clone of a window in another window.  It can be also "
"written to disk and read back in another session.  In either case, use the "
"following function to restore the state of the window."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4193
#, no-wrap
msgid "window-state-put state &optional window ignore"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4201
msgid ""
"This function puts the window state @var{state} into @var{window}.  The "
"argument @var{state} should be the state of a window returned by an earlier "
"invocation of @code{window-state-get}, see above.  The optional argument "
"@var{window} can be either a live window or an internal window "
"(@pxref{Windows and Frames}) and defaults to the selected one.  If "
"@var{window} is not live, it is replaced by a live window before putting "
"@var{state} into it."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4206
msgid ""
"If the optional argument @var{ignore} is non-@code{nil}, it means to ignore "
"minimum window sizes and fixed-size restrictions.  If @var{ignore} is "
"@code{safe}, this means windows can get as small as one line and/or two "
"columns."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:4211
#, no-wrap
msgid "window parameters"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:4215
msgid ""
"This section describes how window parameters can be used to associate "
"additional information with windows."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4216
#, no-wrap
msgid "window-parameter window parameter"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4220
msgid ""
"This function returns @var{window}'s value for @var{parameter}.  The default "
"for @var{window} is the selected window.  If @var{window} has no setting for "
"@var{parameter}, this function returns @code{nil}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4222
#, no-wrap
msgid "window-parameters &optional window"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4227
msgid ""
"This function returns all parameters of @var{window} and their values.  The "
"default for @var{window} is the selected window.  The return value is either "
"@code{nil}, or an association list whose elements have the form "
"@code{(@var{parameter} . @var{value})}."
msgstr ""

#. type: defun
#: original_texis/windows.texi:4229
#, no-wrap
msgid "set-window-parameter window parameter value"
msgstr ""

#. type: defun
#: original_texis/windows.texi:4233
msgid ""
"This function sets @var{window}'s value of @var{parameter} to @var{value} "
"and returns @var{value}.  The default for @var{window} is the selected "
"window."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:4244
msgid ""
"By default, the functions that save and restore window configurations or the "
"states of windows (@pxref{Window Configurations}) do not care about window "
"parameters.  This means that when you change the value of a parameter within "
"the body of a @code{save-window-excursion}, the previous value is not "
"restored when that macro exits.  It also means that when you restore via "
"@code{window-state-put} a window state saved earlier by "
"@code{window-state-get}, all cloned windows have their parameters reset to "
"@code{nil}.  The following variable allows you to override the standard "
"behavior:"
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4245
#, no-wrap
msgid "window-persistent-parameters"
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4250
msgid ""
"This variable is an alist specifying which parameters get saved by "
"@code{current-window-configuration} and @code{window-state-get}, and "
"subsequently restored by @code{set-window-configuration} and "
"@code{window-state-put}.  @xref{Window Configurations}."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4253
msgid ""
"The @sc{car} of each entry of this alist is a symbol specifying the "
"parameter.  The @sc{cdr} should be one of the following:"
msgstr ""

#. type: table
#: original_texis/windows.texi:4258
msgid ""
"This value means the parameter is saved neither by @code{window-state-get} "
"nor by @code{current-window-configuration}."
msgstr ""

#. type: table
#: original_texis/windows.texi:4263
msgid ""
"This value specifies that the parameter is saved by "
"@code{current-window-configuration} and (provided its @var{writable} "
"argument is @code{nil}) by @code{window-state-get}."
msgstr ""

#. type: code{#1}
#: original_texis/windows.texi:4264
#, no-wrap
msgid "writable"
msgstr ""

#. type: table
#: original_texis/windows.texi:4270
msgid ""
"This means that the parameter is saved unconditionally by both "
"@code{current-window-configuration} and @code{window-state-get}.  This value "
"should not be used for parameters whose values do not have a read syntax.  "
"Otherwise, invoking @code{window-state-put} in another session may fail with "
"an @code{invalid-read-syntax} error."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:4278
msgid ""
"Some functions (notably @code{delete-window}, @code{delete-other-windows} "
"and @code{split-window}), may behave specially when their @var{window} "
"argument has a parameter set.  You can override such special behavior by "
"binding the following variable to a non-@code{nil} value:"
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4279
#, no-wrap
msgid "ignore-window-parameters"
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4284
msgid ""
"If this variable is non-@code{nil}, some standard functions do not process "
"window parameters.  The functions currently affected by this are "
"@code{split-window}, @code{delete-window}, @code{delete-other-windows}, and "
"@code{other-window}."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4289
msgid ""
"An application can bind this variable to a non-@code{nil} value around calls "
"to these functions.  If it does so, the application is fully responsible for "
"correctly assigning the parameters of all involved windows when exiting that "
"function."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:4293
msgid "The following parameters are currently used by the window management code:"
msgstr ""

#. type: code{#1}
#: original_texis/windows.texi:4295
#, no-wrap
msgid "delete-window"
msgstr ""

#. type: table
#: original_texis/windows.texi:4298
msgid ""
"This parameter affects the execution of @code{delete-window} "
"(@pxref{Deleting Windows})."
msgstr ""

#. type: code{#1}
#: original_texis/windows.texi:4299
#, no-wrap
msgid "delete-other-windows"
msgstr ""

#. type: table
#: original_texis/windows.texi:4302
msgid ""
"This parameter affects the execution of @code{delete-other-windows} "
"(@pxref{Deleting Windows})."
msgstr ""

#. type: code{#1}
#: original_texis/windows.texi:4303
#, no-wrap
msgid "split-window"
msgstr ""

#. type: table
#: original_texis/windows.texi:4306
msgid ""
"This parameter affects the execution of @code{split-window} "
"(@pxref{Splitting Windows})."
msgstr ""

#. type: code{#1}
#: original_texis/windows.texi:4307
#, no-wrap
msgid "other-window"
msgstr ""

#. type: table
#: original_texis/windows.texi:4310
msgid ""
"This parameter affects the execution of @code{other-window} (@pxref{Cyclic "
"Window Ordering})."
msgstr ""

#. type: code{#1}
#: original_texis/windows.texi:4311
#, no-wrap
msgid "no-other-window"
msgstr ""

#. type: table
#: original_texis/windows.texi:4314
msgid ""
"This parameter marks the window as not selectable by @code{other-window} "
"(@pxref{Cyclic Window Ordering})."
msgstr ""

#. type: code{#1}
#: original_texis/windows.texi:4315
#, no-wrap
msgid "clone-of"
msgstr ""

#. type: table
#: original_texis/windows.texi:4319
msgid ""
"This parameter specifies the window that this one has been cloned from.  It "
"is installed by @code{window-state-get} (@pxref{Window Configurations})."
msgstr ""

#. type: code{#1}
#: original_texis/windows.texi:4320
#, no-wrap
msgid "preserved-size"
msgstr ""

#. type: table
#: original_texis/windows.texi:4328
msgid ""
"This parameter specifies a buffer, a direction where @code{nil} means "
"vertical and @code{t} horizontal, and a size in pixels.  If this window "
"displays the specified buffer and its size in the indicated direction equals "
"the size specified by this parameter, then Emacs will try to preserve the "
"size of this window in the indicated direction.  This parameter is installed "
"and updated by the function @code{window-preserve-size} (@pxref{Preserving "
"Window Sizes})."
msgstr ""

#. type: code{#1}
#: original_texis/windows.texi:4329
#, no-wrap
msgid "quit-restore"
msgstr ""

#. type: table
#: original_texis/windows.texi:4333
msgid ""
"This parameter is installed by the buffer display functions (@pxref{Choosing "
"Window}) and consulted by @code{quit-restore-window} (@pxref{Quitting "
"Windows}).  It contains four elements:"
msgstr ""

#. type: table
#: original_texis/windows.texi:4339
msgid ""
"The first element is one of the symbols @code{window}, meaning that the "
"window has been specially created by @code{display-buffer}; @code{frame}, a "
"separate frame has been created; @code{same}, the window has displayed the "
"same buffer before; or @code{other}, the window showed another buffer "
"before."
msgstr ""

#. type: table
#: original_texis/windows.texi:4344
msgid ""
"The second element is either one of the symbols @code{window} or "
"@code{frame}, or a list whose elements are the buffer shown in the window "
"before, that buffer's window start and window point positions, and the "
"window's height at that time."
msgstr ""

#. type: table
#: original_texis/windows.texi:4348
msgid ""
"The third element is the window selected at the time the parameter was "
"created.  The function @code{quit-restore-window} tries to reselect that "
"window when it deletes the window passed to it as argument."
msgstr ""

#. type: table
#: original_texis/windows.texi:4352
msgid ""
"The fourth element is the buffer whose display caused the creation of this "
"parameter.  @code{quit-restore-window} deletes the specified window only if "
"it still shows that buffer."
msgstr ""

#. type: code{#1}
#: original_texis/windows.texi:4353
#, no-wrap
msgid "min-margins"
msgstr ""

#. type: table
#: original_texis/windows.texi:4359
msgid ""
"The value of this parameter is a cons cell whose @sc{car} and @sc{cdr}, if "
"non-@code{nil}, specify the minimum values (in columns) for the left and "
"right margin of this window.  When present, Emacs will use these values "
"instead of the actual margin widths for determining whether a window can be "
"split or shrunk horizontally."
msgstr ""

#. type: table
#: original_texis/windows.texi:4367
msgid ""
"Emacs never auto-adjusts the margins of any window after splitting or "
"resizing it.  It is the sole responsibility of any application setting this "
"parameter to adjust the margins of this window as well as those of any new "
"window that inherits this window's margins due to a split.  Both "
"@code{window-configuration-change-hook} and "
"@code{window-size-change-functions} (@pxref{Window Hooks}) should be "
"employed for this purpose."
msgstr ""

#. type: table
#: original_texis/windows.texi:4373
msgid ""
"This parameter was introduced in Emacs version 25.1 to support applications "
"that use large margins to center buffer text within a window and should be "
"used, with due care, exclusively by those applications.  It might be "
"replaced by an improved solution in future versions of Emacs."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:4377
msgid ""
"There are additional parameters @code{window-atom} and @code{window-side}; "
"these are reserved and should not be used by applications."
msgstr ""

#. type: section
#: original_texis/windows.texi:4380
#, no-wrap
msgid "Hooks for Window Scrolling and Changes"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:4381
#, no-wrap
msgid "hooks for window operations"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:4389
msgid ""
"This section describes how a Lisp program can take action whenever a window "
"displays a different part of its buffer or a different buffer.  There are "
"three actions that can change this: scrolling the window, switching buffers "
"in the window, and changing the size of the window.  The first two actions "
"run @code{window-scroll-functions}; the last runs "
"@code{window-size-change-functions}."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4390
#, no-wrap
msgid "window-scroll-functions"
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4394
msgid ""
"This variable holds a list of functions that Emacs should call before "
"redisplaying a window with scrolling.  Displaying a different buffer in the "
"window also runs these functions."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4397
msgid ""
"This variable is not a normal hook, because each function is called with two "
"arguments: the window, and its new display-start position."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4401
msgid ""
"These functions must take care when using @code{window-end} (@pxref{Window "
"Start and End}); if you need an up-to-date value, you must use the "
"@var{update} argument to ensure you get it."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4405
msgid ""
"@strong{Warning:} don't use this feature to alter the way the window is "
"scrolled.  It's not designed for that, and such use probably won't work."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4407
#, no-wrap
msgid "window-size-change-functions"
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4412
msgid ""
"This variable holds a list of functions to be called if the size of any "
"window changes for any reason.  The functions are called at the beginning of "
"a redisplay cycle, and just once for each frame on which size changes have "
"occurred."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4418
msgid ""
"Each function receives the frame as its sole argument.  There is no direct "
"way to find out which windows on that frame have changed size, or precisely "
"how.  However, if a size-change function records, at each call, the existing "
"windows and their sizes, it can also compare the present sizes and the "
"previous sizes."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4422
msgid ""
"Creating or deleting windows counts as a size change, and therefore causes "
"these functions to be called.  Changing the frame size also counts, because "
"it changes the sizes of the existing windows."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4428
msgid ""
"You may use @code{save-selected-window} in these functions (@pxref{Selecting "
"Windows}).  However, do not use @code{save-window-excursion} (@pxref{Window "
"Configurations}); exiting that macro counts as a size change, which would "
"cause these functions to be called over and over."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4430
#, no-wrap
msgid "window-configuration-change-hook"
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4435
msgid ""
"A normal hook that is run every time you change the window configuration of "
"an existing frame.  This includes splitting or deleting windows, changing "
"the sizes of windows, or displaying a different buffer in a window."
msgstr ""

#. type: defvar
#: original_texis/windows.texi:4440
msgid ""
"The buffer-local part of this hook is run once for each window on the "
"affected frame, with the relevant window selected and its buffer current.  "
"The global part is run once for the modified frame, with that frame "
"selected."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:4445
msgid ""
"In addition, you can use @code{jit-lock-register} to register a Font Lock "
"fontification function, which will be called whenever parts of a buffer are "
"(re)fontified because a window was scrolled or its size changed.  "
"@xref{Other Font Lock Variables}."
msgstr ""
